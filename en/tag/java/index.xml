<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Pseudoyu</title>
    <link>https://www.pseudoyu.com/en/tag/java/</link>
    <description>Recent content in java on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 23 Dec 2020 03:12:17 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/tag/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java学习 - 线程间的通信</title>
      <link>https://www.pseudoyu.com/en/2020/12/23/java%E5%AD%A6%E4%B9%A0-%E7%BA%BF%E7%A8%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Wed, 23 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/23/java%E5%AD%A6%E4%B9%A0-%E7%BA%BF%E7%A8%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1/</guid>
      <description>线程间的通信 锁与同步 Java中锁是基于对象的，因此也被称为对象锁 一个锁同一时间只能被一个线程持有 线程之间的同步是指线程按照一定的顺序执行 public class</description>
    </item>
    
    <item>
      <title>Java学习 - 线程状态及转化方法</title>
      <link>https://www.pseudoyu.com/en/2020/12/09/java%E5%AD%A6%E4%B9%A0-%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81%E5%8F%8A%E8%BD%AC%E5%8C%96%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 09 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/09/java%E5%AD%A6%E4%B9%A0-%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81%E5%8F%8A%E8%BD%AC%E5%8C%96%E6%96%B9%E6%B3%95/</guid>
      <description>线程状态及转化方法 操作系统中的线程状态转换 操作系统线程主要有以下三个状态 就绪状态 READY：线程正在等待使用CPU，经调度程序调用之后可进入</description>
    </item>
    
    <item>
      <title>Java学习 - 线程组和线程优先级</title>
      <link>https://www.pseudoyu.com/en/2020/12/07/java%E5%AD%A6%E4%B9%A0-%E7%BA%BF%E7%A8%8B%E7%BB%84%E5%92%8C%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7/</link>
      <pubDate>Mon, 07 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/07/java%E5%AD%A6%E4%B9%A0-%E7%BA%BF%E7%A8%8B%E7%BB%84%E5%92%8C%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7/</guid>
      <description>线程组和线程优先级 线程组 Java中的ThreadGroup表示线程组，可使用线程组对线程进行批量控制；每个线程必须存在于一个线程组中，不能独</description>
    </item>
    
    <item>
      <title>Java学习 - 多线程入门类和接口</title>
      <link>https://www.pseudoyu.com/en/2020/12/05/java%E5%AD%A6%E4%B9%A0-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Sat, 05 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/05/java%E5%AD%A6%E4%B9%A0-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/</guid>
      <description>多线程入门类和接口 Java中使用多线程的方法 由于Java单继承多实现的特性，Runnable接口用起来比Thread更灵活 Runnable接</description>
    </item>
    
    <item>
      <title>Java学习 - 文件与I/O流</title>
      <link>https://www.pseudoyu.com/en/2020/12/02/java%E5%AD%A6%E4%B9%A0-%E6%96%87%E4%BB%B6%E4%B8%8Ei/o%E6%B5%81/</link>
      <pubDate>Wed, 02 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/02/java%E5%AD%A6%E4%B9%A0-%E6%96%87%E4%BB%B6%E4%B8%8Ei/o%E6%B5%81/</guid>
      <description>IO流 分类 流的流向 输入流 输出流 操作单元 字节流 字符流 角色 节点流 处理流 抽象类基类 InputStream（字节流）/Reader（字符流） Outp</description>
    </item>
    
    <item>
      <title>Java学习 - 多线程</title>
      <link>https://www.pseudoyu.com/en/2020/11/29/java%E5%AD%A6%E4%B9%A0-%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Sun, 29 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/29/java%E5%AD%A6%E4%B9%A0-%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>多线程 线程、程序、进程的基本概念 线程 比进程更小的执行单位，一个进程在执行的过程中可以产生多个线程 同类的多个线程共享同一块内存空间和一组系统资</description>
    </item>
    
    <item>
      <title>Java学习 - 常用方法</title>
      <link>https://www.pseudoyu.com/en/2020/11/27/java%E5%AD%A6%E4%B9%A0-%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 27 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/27/java%E5%AD%A6%E4%B9%A0-%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>String与StringBuffer String 特征 Java8中，String内部使用char数组存储数据 Java9后，String类的实现改用了b</description>
    </item>
    
    <item>
      <title>Java学习 - 集合</title>
      <link>https://www.pseudoyu.com/en/2020/11/25/java%E5%AD%A6%E4%B9%A0-%E9%9B%86%E5%90%88/</link>
      <pubDate>Wed, 25 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/25/java%E5%AD%A6%E4%B9%A0-%E9%9B%86%E5%90%88/</guid>
      <description>集合类 概述 为了在程序中保存数目不确定的对象，JDK中提供了一系列特殊的类，这些类可以存储任意类型的对象且长度可变，称为集合，位于java.u</description>
    </item>
    
    <item>
      <title>Java学习 - 面向对象</title>
      <link>https://www.pseudoyu.com/en/2020/11/23/java%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Mon, 23 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/23/java%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <description>Java面向对象 特性 封装性：将对象的属性和行为封装起来，不需要让外界知道具体的实现细节 继承性：无需重新编写原有类的情况下，新类可拥有原有类的</description>
    </item>
    
    <item>
      <title>Java学习 - 基础</title>
      <link>https://www.pseudoyu.com/en/2020/11/20/java%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 20 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/20/java%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80/</guid>
      <description>Java基础 Java特性 简单性 丢弃了C++中运算符重载、多重继承等 不使用指针而是使用引用 自动垃圾回收机制（不用开发者进行内存管理） 面向对象 提</description>
    </item>
    
  </channel>
</rss>
