<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Pseudoyu</title>
    <link>https://www.pseudoyu.com/zh/category/notes/</link>
    <description>Recent content in Notes on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 05 Nov 2020 09:25:17 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/zh/category/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blockchain Proof of Stake</title>
      <link>https://www.pseudoyu.com/zh/2020/11/05/blockchain-proof-of-stake/</link>
      <pubDate>Thu, 05 Nov 2020 09:25:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/05/blockchain-proof-of-stake/</guid>
      <description>Blockchain Technology and Applications Proof of Stake 本质 Virtual mining 作用 省去了挖矿过程 节约能耗 提升抗攻击能力 AltCoin Infanticide 问题 Nothing at stake 机制不够成熟 Bug bounty Ethereum Casper Friendly Finality Gadget (FFG) Validator Epoch 推动系统达成共识 (Two-phase commit) Prepare message 2/3 Commit message 2/3</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Difficulty</title>
      <link>https://www.pseudoyu.com/zh/2020/11/04/blockchain-ethereum-difficulty/</link>
      <pubDate>Wed, 04 Nov 2020 22:10:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/04/blockchain-ethereum-difficulty/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) 难度调整 发展阶段 Frontier Homestead Metropolis Byzantium (拜占庭) Constantinople Serenity 难度D(H) D(0) - 131072 基础部分 难度炸弹 为了向PoS迁移，降低分叉风险 实际：迁移进度慢，但是</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Mining Algorithm</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-mining-algorithm/</link>
      <pubDate>Tue, 03 Nov 2020 10:30:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-mining-algorithm/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) Mining Algorithm Compared to LiteCoin Scrypt Hard for light node to verify 128K 2 minutes and a half Trend ASIC resistance Memory hard Design 2 datasets 16M cache For verification 1G dataset -&amp;gt; 2.5G now Generate Read 256 times of cache Put into a large list Solve Read 128 times of large list Neighboring 64 * 2 Ethash 1G Memory + 16M</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum GHOST Protocol</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-ghost-protocol/</link>
      <pubDate>Tue, 03 Nov 2020 09:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-ghost-protocol/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) GHOST Protocol  Problem  Less confirmation time Temporary fork Mining centralization (Centralization bias)   Uncle block  Only first blcok after forking Same ancestor Within 7 generation Decreasing Block reward  7/8 for branch -&amp;gt; 6/8 -&amp;gt; 5/8 -&amp;gt; &amp;hellip; -&amp;gt; 2/8 1/32 for main (fixed)   No gas fee Main blocks don&amp;rsquo;t check or execute the uncle block transaction    </description>
    </item>
    
    <item>
      <title>Timus 2012 About Grisha N</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/timus-2012-about-grisha-n/</link>
      <pubDate>Tue, 03 Nov 2020 02:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/timus-2012-about-grisha-n/</guid>
      <description>Timus 2012 About Grisha N Problem Description Grisha N. told his two teammates that he was going to solve all given problems at the subregional contest, even if the teammates wouldn’t show up at the competition. The teammates didn’t believe Grisha so he told them the plan how he was going to do this.
During the first hour he wants to solve f problems. If there is still some time left to the end of the first hour, Grisha will simply walk along the hall.</description>
    </item>
    
    <item>
      <title>Timus 1877 Bicycle Codes</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/timus-1877-bicycle-codes/</link>
      <pubDate>Tue, 03 Nov 2020 01:30:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/timus-1877-bicycle-codes/</guid>
      <description>Timus 1877 Bicycle Codes Problem Description Den has two four-digit combination locks for protecting his bicycle from thieves. Every evening he arms the bicycle antitheft alarm and fastens the bicycle to a special stand with one of the locks. Den never uses the same lock two evenings in a row. One night a thief tried to open the lock using the code 0000. The alarm went off and the thief hurried away.</description>
    </item>
    
    <item>
      <title>Timus 1785 Lost in Localization</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/timus-1785-lost-in-localization/</link>
      <pubDate>Tue, 03 Nov 2020 01:10:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/timus-1785-lost-in-localization/</guid>
      <description>Timus 1785 Lost in Localization Problem Description The Lavin Interactive Company, which has developed the turn-based strategy Losers-V, is constantly extending its target market by localizing the game to as many languages as it can. In particular, they are interested in creating a version of the game in Anindilyakwa, which is one of the languages spoken by indigenous Australians.
However, the localization is complicated by the fact that Anindilyakwa has no numerals.</description>
    </item>
    
    <item>
      <title>Timus 1409 Two Gangsters</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/timus-1409-two-gangsters/</link>
      <pubDate>Tue, 03 Nov 2020 00:40:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/timus-1409-two-gangsters/</guid>
      <description>Timus 1409 Two Gangsters Problem Description Two gangsters Harry and Larry had a rest at countryside. They decided to spend some time shooting, so they put several beer cans (no more than 10) on a log. Harry started to shoot cans one after another from the leftmost to the right and Larry – from the rightmost to the left. At some moment it happened so that they shot one and the same can.</description>
    </item>
    
    <item>
      <title>Timus 1293 Eniya</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/timus-1293-eniya/</link>
      <pubDate>Tue, 03 Nov 2020 00:10:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/timus-1293-eniya/</guid>
      <description>Timus 1293 Eniya Problem Description It’s restless now on the slips of the intergalactic port’s sixth dock of planet of Torn. No longer then in a month the reconstruction of the small ironclad corvette “Eniya” will be finished. And again this battle ship and its brave team would have to struggle for the control over plutonium mines of Sibelius. The work cannot be stopped even for a second, self-powered laser welders work round the clock.</description>
    </item>
    
    <item>
      <title>Timus 1001 Reverse Root</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/timus-1001-reverse-root/</link>
      <pubDate>Mon, 02 Nov 2020 23:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/timus-1001-reverse-root/</guid>
      <description>Timus 1001 Reverse Root Problem Description The problem is so easy, that the authors were lazy to write a statement for it!
Input: The input stream contains a set of integer numbers Ai. The numbers are separated by any number of spaces and line breaks. A size of the input stream does not exceed 256 KB.
Output: For each number Ai from the last one till the first one you should output its square root.</description>
    </item>
    
    <item>
      <title>Timus 1000 A&#43;B Problem</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/timus-1000-a-b-problem/</link>
      <pubDate>Mon, 02 Nov 2020 22:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/timus-1000-a-b-problem/</guid>
      <description>Timus 1000 A+B Problem Problem Description Calculate a + b
Input: a and b
Output: a+b
My Solution import java.util.*; public class problem1000 { public static void main(String[] args) { Scanner in = new Scanner(System.in); int a = in.nextInt(); int b = in.nextInt(); in.close(); System.out.println(a + b); } } </description>
    </item>
    
    <item>
      <title>LeetCode 1 Two Sum</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/leetcode-1-two-sum/</link>
      <pubDate>Mon, 02 Nov 2020 20:53:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/leetcode-1-two-sum/</guid>
      <description>LeetCode #1 Two Sum Problem Description Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. Example 1: Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because</description>
    </item>
    
    <item>
      <title>Java Methods</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/java-methods/</link>
      <pubDate>Mon, 02 Nov 2020 14:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/java-methods/</guid>
      <description>Java Basics Java 方法 (Methods) Java程序设计语言总是采用按值调用 // Example public class methodTest { public static void main(String[] args) { // TODO Auto-generated method stub Student s1 = new Student(&amp;#34;Misty&amp;#34;); Student s2 = new Student(&amp;#34;Marshal&amp;#34;); Test.swap(s1, s2); System.out.println(&amp;#34;s1:&amp;#34; + s1.getName()); System.out.println(&amp;#34;s2:&amp;#34; + s2.getName()); } public static void swap(Student x, Student y) { Student temp</description>
    </item>
    
    <item>
      <title>Java equals Method</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/java-equals-method/</link>
      <pubDate>Mon, 02 Nov 2020 13:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/java-equals-method/</guid>
      <description>Java Basics Java equals Method equals() Features Equivalence relationship x.euqal(x); Compared to self x.equals(y) == y.equals(x); When conversed, also true if (x.equals(y) &amp;amp;&amp;amp; y.equals(z)) x.equals(z); When transited, also true x.equals(y) == x.equals(y); When repeated, always true x.equals(null) == false; When compared to null, always false (when x is not assigned null) About == For primitive data type, == measures the equivalence (there is no equals()) For reference, == measures whether</description>
    </item>
    
    <item>
      <title>Java Generics</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/java-generics/</link>
      <pubDate>Mon, 02 Nov 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/java-generics/</guid>
      <description>Java Basics 泛型 (Generics) 定义 提供编译时类型安全检测机制 参数化类型 Java泛型 伪泛型（类型擦除） 使用方式 泛型类 // 定义泛型类 public class Generic&amp;lt;T&amp;gt; { private T key; public class Generic(T key) { this.key = key; } public</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Transaction tree and Receipt tree</title>
      <link>https://www.pseudoyu.com/zh/2020/10/31/blockchain-ethereum-transaction-tree-and-receipt-tree/</link>
      <pubDate>Sat, 31 Oct 2020 19:36:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/31/blockchain-ethereum-transaction-tree-and-receipt-tree/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) Transaction tree and Receipt tree  Merkle proof Bloom filter  Search whether an element is in a collection Filter useless blocks False postive No false negative Can&amp;rsquo;t do delete operation   Transaction-driven state machine  </description>
    </item>
    
    <item>
      <title>Blockchain Ethereum State tree</title>
      <link>https://www.pseudoyu.com/zh/2020/10/30/blockchain-ethereum-state-tree/</link>
      <pubDate>Fri, 30 Oct 2020 10:21:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/30/blockchain-ethereum-state-tree/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) State tree  addr -&amp;gt; state  Hash  Construct merkle tree cost too much   Unsorted merkle tree  No search and update method   Sorted merkle tree  Cost too much when inserting     (Key, Value)  RLP (Recursive Length Prefix)  Nested array of bytes   Compared: protocol buffer (protocolbuf)   Trie (Retrieval)  Pros  Branching factor Efficiency of trie depends on the length of key Avoid collision resistence Fixed input -&amp;gt; fixed output Update operation locally   Cons  Storage cost     Patricia tree (trie)  Compact the path, less memory cost When the distribution is sparse   Merkle Patricia Tree  Pointer -&amp;gt; Hash pointer  Merkle tree vs.</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Features</title>
      <link>https://www.pseudoyu.com/zh/2020/10/29/blockchain-ethereum-features/</link>
      <pubDate>Thu, 29 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/29/blockchain-ethereum-features/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) Feature  Memory hard Mining puzzle ASIC resistance  Account  Threats  Double spending attack Replay attack  Solution: add a nonce to count tx     Type  Externally owned account  Balance Nonce (sequence number)   Smart contract account (can&amp;rsquo;t start a transaction)  Balance Nonce Code Storge      PoW -&amp;gt; PoS Smart contract (decentralized contract) </description>
    </item>
    
    <item>
      <title>Blockchain BitCoin Questions</title>
      <link>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-questions/</link>
      <pubDate>Wed, 28 Oct 2020 14:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-questions/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Additional questions  Q: In a transaction, the receiver is not connected to the bitcoin network.  A: No need online, just records   Q: Lost private key  A: No solution Exchanges: Mt. Gox   Q: Wrong address  A: No solution   Q: OP_RETURN, return mistake, why it&amp;rsquo;s still executed?  A: OP_RETURN is in the output, so it will be verified in the next TX   Q: How to judge who find the nonce first?</description>
    </item>
    
    <item>
      <title>Blockchain BitCoin Anonymity</title>
      <link>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-anonymity/</link>
      <pubDate>Wed, 28 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-anonymity/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Anonymity  Pseudonymity Threats  Address generation  Analyze tx Analyze wallets (if used)   Connection to real identity  KYC (Know Your Customer)     Bad use  Silk road (eBay for illegal drugs)   Tips  TOR browser Coin mixing   Zero-knowledge proof  Signature (public key - private key)   Possible solution  Sacrifice  Performance Not absolutely secure   Zerocoin  Base coin Zero coin   Zerocash    </description>
    </item>
    
  </channel>
</rss>
