<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0">
  <channel>
    <title>Pseudoyu</title>
    <link>https://www.pseudoyu.com/en/</link>
    <description>Recent content on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 02 Nov 2020 09:50:17 +0800</lastBuildDate>
    
    <atom:link href="https://www.pseudoyu.com/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://www.pseudoyu.com/en/about/</link>
      <pubDate>Sun, 13 Sep 2020 16:03:46 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/about/</guid>
      
        <description>&lt;h2 id=&#34;about-pseudoyu&#34;&gt;About Pseudoyu&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/mtr_wait_people.jpeg&#34; alt=&#34;mtr_wait_people&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pseudoyu&lt;/strong&gt; is my first website. I mainly write about my daily life, study and thoughts here. This blog was initially created on my personal web server using WordPress, and I moved to WeChat Official Account (the same name). Due to the consideration of stability and customization need, I decided to build a new site on GitHub Page with the domain name &lt;a href=&#34;https://www.pseudoyu.com/en&#34;&gt;pseudoyu.com&lt;/a&gt; and use a static site generator (Hugo) to generate the content.&lt;/p&gt;
&lt;p&gt;I named &lt;strong&gt;Pseudoyu&lt;/strong&gt; as my blog name quite by chance. I&amp;rsquo;m stuck for the choice of my HKU uid because my name is really common(but I still want a special one for my further use). Inspired by Rachel, I found a prefix &lt;a href=&#34;https://www.oxfordlearnersdictionaries.com/definition/english/pseudo&#34;&gt;&lt;em&gt;pseudo&lt;/em&gt;&lt;/a&gt;, the word &lt;a href=&#34;https://www.oxfordlearnersdictionaries.com/definition/english/pseudonym&#34;&gt;pseudonym&lt;/a&gt; means a name that is not real, the item &lt;a href=&#34;https://www.lexico.com/definition/pseudocode&#34;&gt;pseudocode&lt;/a&gt; means a notation resembling a simplified programming language in Computer Science world. And one of my favorite cartoons &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%81%BD%E7%89%A9%E8%AA%9E&#34;&gt;&lt;em&gt;Nisemonogatari&lt;/em&gt;&lt;/a&gt; also focuses on the concept of &lt;em&gt;&lt;strong&gt;pseudo&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;real&lt;/strong&gt;&lt;/em&gt;. So, why there can&amp;rsquo;t be a pseudo - yu (me)?&lt;/p&gt;
&lt;p&gt;I always fall into self-doubt. Whenever I&amp;rsquo;m talking with my best friend, if the topics are about &lt;em&gt;initials&lt;/em&gt; or &lt;em&gt;meanings&lt;/em&gt;, I&amp;rsquo;ll choose to escape. It&amp;rsquo;s difficult for me to feel the simple joy or satisfaction emotions even if I made some achievements and praised by others. I used to regard everything in my life is meaningless. As time goes by, I begin to understand more about it. I wrote a paragh in my another article &lt;a href=&#34;https://www.hexarthur.com/en/2020/06/06/dear-yu-are-you-ready-for-23/&#34;&gt;&lt;em&gt;Dear Yu, Are you ready for 23?&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;&lt;strong&gt;&amp;ldquo;Perhaps, thinking about meaning itself is also a process of constructing meanings. I decide to give up the previous illusion of an &amp;lsquo;Aha moment&amp;rsquo; and just continue moving forward to experience my own life.&amp;quot;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The name &lt;strong&gt;Pseudoyu&lt;/strong&gt; also tells myself that I should never constantly struggle with what meaning is anymore. Instead, I will continue to learn, experience and challenge new things. And I can finally accept other&amp;rsquo;s judgement or complain about me like &amp;ldquo;&lt;strong&gt;You changed&lt;/strong&gt;&amp;rdquo; with pressure.&lt;/p&gt;
&lt;p&gt;I hope I can acquire more inputs like new knowledge and ideas, and write more short articles as outputs.&lt;/p&gt;
&lt;h2 id=&#34;about-me&#34;&gt;About Me&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/mtr_window_me.jpeg&#34; alt=&#34;mtr_window_me&#34;&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m humble and have a sensitive mind. I want to learn things and become a better person. I enjoy reading, thinking and writing in my leisure time.&lt;/p&gt;
&lt;h3 id=&#34;my-goals&#34;&gt;My Goals&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;About my life&lt;/strong&gt;&lt;/em&gt;, I hope I can establish a life-long friendship with my best friends, keep close relationship with my families, and face future challenges with my beloved. Also, I hope to meet interesting friends of diverse background.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;About my career&lt;/strong&gt;&lt;/em&gt;, I hope I could always be learning and growing during my life and play an active role in the open source software movement.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Economically&lt;/strong&gt;&lt;/em&gt;, I hope to be able to choose what to do and shape my own the lifestyle freely.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;About the society&lt;/strong&gt;&lt;/em&gt;, I hope to have the opportunity to participate in some public welfare or other form of kindness to contribute to the world.&lt;/p&gt;
&lt;h3 id=&#34;my-experiences&#34;&gt;My Experiences&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Master of Science&lt;/strong&gt;，Department of Computer Science @ &lt;em&gt;&lt;strong&gt;The University of Hong Kong (HKU)&lt;/strong&gt;&lt;/em&gt; | 2020/2021&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bachelor of Arts&lt;/strong&gt;, School of Foreign Languages @ &lt;em&gt;&lt;strong&gt;Wuhan University of Technology (WHUT)&lt;/strong&gt;&lt;/em&gt; | 2015/2019&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If there is anything worth mentioning about me, it may be the experience how I turn from a literature enthusiast majoring in English and accompanied by Shakespeare to a Geek who studies Computer Science now. I will also share some of the thoughts and actual preparations later.&lt;/p&gt;
&lt;h3 id=&#34;my-records&#34;&gt;My Records&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/pseudoyu/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pseudoyu&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/user/ffe947f087d1f63b161c3fcb310a6578&#34;&gt;Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/user/show/121369734-yu-zhang&#34;&gt;Goodreads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leetcode.com/pseudoyu/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://acm.timus.ru/author.aspx?id=300324&#34;&gt;Timus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/pseudoyu&#34;&gt;HackerRank&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;my-social-networks&#34;&gt;My Social Networks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/5374948/&#34;&gt;BiliBili&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/pseudoyuzhang&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.instagram.com/pseudo.yu/&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/pseudo_yu&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@pseudoyu&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCR0O0s303tGBi3P02hstQPA/&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/user/pseudo_yu&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Generics</title>
      <link>https://www.pseudoyu.com/en/2020/11/02/java-generics/</link>
      <pubDate>Mon, 02 Nov 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/02/java-generics/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;泛型-generics&#34;&gt;泛型 (Generics)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_generics.svg&#34; alt=&#34;java_generics&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;定义&#34;&gt;定义&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;提供编译时类型安全检测机制&lt;/li&gt;
&lt;li&gt;参数化类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;java泛型&#34;&gt;Java泛型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;伪泛型（类型擦除）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用方式&#34;&gt;使用方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;泛型类&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 定义泛型类
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Generic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Generic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//实例化
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Generic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;genericInteger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Generic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;泛型接口
&lt;ul&gt;
&lt;li&gt;不指定类型&lt;/li&gt;
&lt;li&gt;指定类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//接口
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Generator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//不指定类型
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Generator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nd&#34;&gt;@override&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//指定类型
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Generator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nd&#34;&gt;@override&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;泛型方法&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//定义泛型方法
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inputArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inputArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//创建不同类型数组
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;integerArray&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringArray&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;World&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;printArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;integerArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;printArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stringArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;通配符
&lt;ul&gt;
&lt;li&gt;T (Type 具体Java类型)&lt;/li&gt;
&lt;li&gt;E (Element)&lt;/li&gt;
&lt;li&gt;K (键)&lt;/li&gt;
&lt;li&gt;V (值)&lt;/li&gt;
&lt;li&gt;? (不确定)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Ethereum Transaction tree and Receipt tree</title>
      <link>https://www.pseudoyu.com/en/2020/10/31/blockchain-ethereum-transaction-tree-and-receipt-tree/</link>
      <pubDate>Sat, 31 Oct 2020 19:36:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/31/blockchain-ethereum-transaction-tree-and-receipt-tree/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;ethereum-system-account-based-ledger&#34;&gt;Ethereum System (Account-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;transaction-tree-and-receipt-tree&#34;&gt;Transaction tree and Receipt tree&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_ethereum_transaction_and_receipt_tree.svg&#34; alt=&#34;blockchain_ethereum_transaction_and_receipt_tree&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Merkle proof&lt;/li&gt;
&lt;li&gt;Bloom filter
&lt;ul&gt;
&lt;li&gt;Search whether an element is in a collection&lt;/li&gt;
&lt;li&gt;Filter useless blocks&lt;/li&gt;
&lt;li&gt;False postive&lt;/li&gt;
&lt;li&gt;No false negative&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t do delete operation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Transaction-driven state machine&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Ethereum State tree</title>
      <link>https://www.pseudoyu.com/en/2020/10/30/blockchain-ethereum-state-tree/</link>
      <pubDate>Fri, 30 Oct 2020 10:21:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/30/blockchain-ethereum-state-tree/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;ethereum-system-account-based-ledger&#34;&gt;Ethereum System (Account-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;state-tree&#34;&gt;State tree&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_ethereum_state_tree.svg&#34; alt=&#34;blockchain_ethereum_state_tree&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;addr -&amp;gt; state
&lt;ul&gt;
&lt;li&gt;Hash
&lt;ul&gt;
&lt;li&gt;Construct merkle tree cost too much&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unsorted merkle tree
&lt;ul&gt;
&lt;li&gt;No search and update method&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sorted merkle tree
&lt;ul&gt;
&lt;li&gt;Cost too much when inserting&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Key, Value)
&lt;ul&gt;
&lt;li&gt;RLP (Recursive Length Prefix)
&lt;ul&gt;
&lt;li&gt;Nested array of bytes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Compared: protocol buffer (protocolbuf)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Trie (Retrieval)
&lt;ul&gt;
&lt;li&gt;Pros
&lt;ul&gt;
&lt;li&gt;Branching factor&lt;/li&gt;
&lt;li&gt;Efficiency of trie depends on the length of key&lt;/li&gt;
&lt;li&gt;Avoid collision resistence&lt;/li&gt;
&lt;li&gt;Fixed input -&amp;gt; fixed output&lt;/li&gt;
&lt;li&gt;Update operation locally&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons
&lt;ul&gt;
&lt;li&gt;Storage cost&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Patricia tree (trie)
&lt;ul&gt;
&lt;li&gt;Compact the path, less memory cost&lt;/li&gt;
&lt;li&gt;When the distribution is sparse&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Merkle Patricia Tree
&lt;ul&gt;
&lt;li&gt;Pointer -&amp;gt; Hash pointer
&lt;ul&gt;
&lt;li&gt;Merkle tree vs. Binary tree&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Root hash value
&lt;ul&gt;
&lt;li&gt;Protect the whole tree&lt;/li&gt;
&lt;li&gt;Merkle proof&lt;/li&gt;
&lt;li&gt;Check the existence of an account&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keep history records
&lt;ul&gt;
&lt;li&gt;Rollback&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Ethereum Features</title>
      <link>https://www.pseudoyu.com/en/2020/10/29/blockchain-ethereum-features/</link>
      <pubDate>Thu, 29 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/29/blockchain-ethereum-features/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;ethereum-system-account-based-ledger&#34;&gt;Ethereum System (Account-based ledger)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_ethereum_features.svg&#34; alt=&#34;blockchain_ethereum_features&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;feature&#34;&gt;Feature&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Memory hard&lt;/li&gt;
&lt;li&gt;Mining puzzle&lt;/li&gt;
&lt;li&gt;ASIC resistance&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;account&#34;&gt;Account&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Threats
&lt;ul&gt;
&lt;li&gt;Double spending attack&lt;/li&gt;
&lt;li&gt;Replay attack
&lt;ul&gt;
&lt;li&gt;Solution: add a nonce to count tx&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Type
&lt;ul&gt;
&lt;li&gt;Externally owned account
&lt;ul&gt;
&lt;li&gt;Balance&lt;/li&gt;
&lt;li&gt;Nonce (sequence number)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Smart contract account (can&amp;rsquo;t start a transaction)
&lt;ul&gt;
&lt;li&gt;Balance&lt;/li&gt;
&lt;li&gt;Nonce&lt;/li&gt;
&lt;li&gt;Code&lt;/li&gt;
&lt;li&gt;Storge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pow---pos&#34;&gt;PoW -&amp;gt; PoS&lt;/h3&gt;
&lt;h3 id=&#34;smart-contract-decentralized-contract&#34;&gt;Smart contract (decentralized contract)&lt;/h3&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Questions</title>
      <link>https://www.pseudoyu.com/en/2020/10/28/blockchain-bitcoin-questions/</link>
      <pubDate>Wed, 28 Oct 2020 14:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/28/blockchain-bitcoin-questions/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;additional-questions&#34;&gt;Additional questions&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_questions.svg&#34; alt=&#34;blockchain_bitcoin_questions&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q: In a transaction, the receiver is not connected to the bitcoin network.
&lt;ul&gt;
&lt;li&gt;A: No need online, just records&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Lost private key
&lt;ul&gt;
&lt;li&gt;A: No solution&lt;/li&gt;
&lt;li&gt;Exchanges: Mt. Gox&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Wrong address
&lt;ul&gt;
&lt;li&gt;A: No solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: OP_RETURN, return mistake, why it&amp;rsquo;s still executed?
&lt;ul&gt;
&lt;li&gt;A: OP_RETURN is in the output, so it will be verified in the next TX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How to judge who find the nonce first?
&lt;ul&gt;
&lt;li&gt;A: Coinbase tx in the block&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How to judge who will get the tx fee?
&lt;ul&gt;
&lt;li&gt;A: No need to know in advance, just calculate (output - input)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How Hash pointer work in other hosts (pointer only works locally)?
&lt;ul&gt;
&lt;li&gt;A: Only Hash, no pointer (stored in key-value database, e.g. levelDB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Divide private key to several pieces?
&lt;ul&gt;
&lt;li&gt;A: Security, loss&lt;/li&gt;
&lt;li&gt;Possible solution: MULTISIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How can Bitcoin gets its consensus?
&lt;ul&gt;
&lt;li&gt;A: Actually no consensus, like fork attack, in principle/in practice&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How to attrack miners?
&lt;ul&gt;
&lt;li&gt;A: Increase profits and lower cost, rareness&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Will quantum computing influence Bitcoin?
&lt;ul&gt;
&lt;li&gt;A: Not in practical use&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Anonymity</title>
      <link>https://www.pseudoyu.com/en/2020/10/28/blockchain-bitcoin-anonymity/</link>
      <pubDate>Wed, 28 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/28/blockchain-bitcoin-anonymity/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;anonymity&#34;&gt;Anonymity&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_anonymity.svg&#34; alt=&#34;blockchain_bitcoin_anonymity&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pseudonymity&lt;/li&gt;
&lt;li&gt;Threats
&lt;ul&gt;
&lt;li&gt;Address generation
&lt;ul&gt;
&lt;li&gt;Analyze tx&lt;/li&gt;
&lt;li&gt;Analyze wallets (if used)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Connection to real identity
&lt;ul&gt;
&lt;li&gt;KYC (Know Your Customer)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bad use
&lt;ul&gt;
&lt;li&gt;Silk road (eBay for illegal drugs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tips
&lt;ul&gt;
&lt;li&gt;TOR browser&lt;/li&gt;
&lt;li&gt;Coin mixing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zero-knowledge proof
&lt;ul&gt;
&lt;li&gt;Signature (public key - private key)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Possible solution
&lt;ul&gt;
&lt;li&gt;Sacrifice
&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Not absolutely secure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zerocoin
&lt;ul&gt;
&lt;li&gt;Base coin&lt;/li&gt;
&lt;li&gt;Zero coin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zerocash&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Scripts</title>
      <link>https://www.pseudoyu.com/en/2020/10/24/blockchain-bitcoin-scripts/</link>
      <pubDate>Sat, 24 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/24/blockchain-bitcoin-scripts/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;scripts-stack-based-language&#34;&gt;Scripts (stack based language)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_scripts.svg&#34; alt=&#34;blockchain_bitcoin_scripts&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TX structure
&lt;ul&gt;
&lt;li&gt;txid&lt;/li&gt;
&lt;li&gt;hash&lt;/li&gt;
&lt;li&gt;version (of bitcoin)&lt;/li&gt;
&lt;li&gt;size&lt;/li&gt;
&lt;li&gt;locktime (take effect time)&lt;/li&gt;
&lt;li&gt;vin
&lt;ul&gt;
&lt;li&gt;txid&lt;/li&gt;
&lt;li&gt;vout&lt;/li&gt;
&lt;li&gt;scriptSig (input script)
&lt;ul&gt;
&lt;li&gt;asm&lt;/li&gt;
&lt;li&gt;hex&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;vout
&lt;ul&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;li&gt;n&lt;/li&gt;
&lt;li&gt;scriptPubKey (output script)&lt;/li&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;blockhash&lt;/li&gt;
&lt;li&gt;confirmations&lt;/li&gt;
&lt;li&gt;time (tx time)&lt;/li&gt;
&lt;li&gt;blocktime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Transaction
&lt;ul&gt;
&lt;li&gt;P2PK (Pay to Public Key)
&lt;ul&gt;
&lt;li&gt;input script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (Sig) (signed by provate key)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (PubKey)&lt;/li&gt;
&lt;li&gt;CHECKSIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;P2PKH (Pay to Public Key Hash)
&lt;ul&gt;
&lt;li&gt;input script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (Sig) (signed by provate key)&lt;/li&gt;
&lt;li&gt;PUSHDATA (PubKey)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output script
&lt;ul&gt;
&lt;li&gt;DUP (duplicate a PubKey)&lt;/li&gt;
&lt;li&gt;HASH160 (calculate the PubKey&amp;rsquo;s hash)&lt;/li&gt;
&lt;li&gt;PUSHDATA (PubKeyHash)&lt;/li&gt;
&lt;li&gt;EQUALVERIFY&lt;/li&gt;
&lt;li&gt;CHECKSIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;P2SH (Pay to Script Hash)
&lt;ul&gt;
&lt;li&gt;redeemScript
&lt;ul&gt;
&lt;li&gt;PUSHDATA (PubKey)&lt;/li&gt;
&lt;li&gt;CHECKSIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;input script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (Sig)&lt;/li&gt;
&lt;li&gt;PUSHDATA (serialized redeemScript)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output script
&lt;ul&gt;
&lt;li&gt;HASH160&lt;/li&gt;
&lt;li&gt;PUSHDATA (redeemScriptHash)&lt;/li&gt;
&lt;li&gt;EQUAL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Proof of Burn
&lt;ul&gt;
&lt;li&gt;Destroy bitcoin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Fork</title>
      <link>https://www.pseudoyu.com/en/2020/10/23/blockchain-bitcoin-fork/</link>
      <pubDate>Fri, 23 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/23/blockchain-bitcoin-fork/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;fork&#34;&gt;Fork&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_fork.svg&#34; alt=&#34;blockchain_bitcoin_fork&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;State fork
&lt;ul&gt;
&lt;li&gt;Forking attack (deliberate fork)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Protocol fork
&lt;ul&gt;
&lt;li&gt;Hard fork (permanent)
&lt;ul&gt;
&lt;li&gt;Block size limit (1M -&amp;gt; 4M)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Soft fork (&amp;gt; 50%, temporary)
&lt;ul&gt;
&lt;li&gt;Block size limit (1M -&amp;gt; 0.5M)&lt;/li&gt;
&lt;li&gt;coinbase
&lt;ul&gt;
&lt;li&gt;As extra nonce 2^32 -&amp;gt; 2^96 (adding 8 bytes)&lt;/li&gt;
&lt;li&gt;As root hash of UTXO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;P2SH(Pay to Script Hash)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Throwable</title>
      <link>https://www.pseudoyu.com/en/2020/10/22/java-throwable/</link>
      <pubDate>Thu, 22 Oct 2020 10:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/22/java-throwable/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;throwable&#34;&gt;Throwable&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_throwable.svg&#34; alt=&#34;java_throwable&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;error&#34;&gt;Error&lt;/h3&gt;
&lt;p&gt;(JVM can&amp;rsquo;t handle with)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VirtualMachineError
&lt;ul&gt;
&lt;li&gt;StackOverFlowError&lt;/li&gt;
&lt;li&gt;OutOfMemoryError&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AWTError&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;exception&#34;&gt;Exception&lt;/h3&gt;
&lt;p&gt;(Can be deal with by program)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IOException
&lt;ul&gt;
&lt;li&gt;EOFException&lt;/li&gt;
&lt;li&gt;FileNotFoundException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RuntimeException
&lt;ul&gt;
&lt;li&gt;ArrithmeticException&lt;/li&gt;
&lt;li&gt;MissingResourceException&lt;/li&gt;
&lt;li&gt;ClassNotFoundException&lt;/li&gt;
&lt;li&gt;NullPointerException&lt;/li&gt;
&lt;li&gt;IllegalArgumentException&lt;/li&gt;
&lt;li&gt;ArrayIndexOutOfBoundsException&lt;/li&gt;
&lt;li&gt;UnknownTypeException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;basic-syntax&#34;&gt;Basic syntax&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;try-catch&lt;/li&gt;
&lt;li&gt;throw&lt;/li&gt;
&lt;li&gt;throws&lt;/li&gt;
&lt;li&gt;finally&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Inheritance</title>
      <link>https://www.pseudoyu.com/en/2020/10/22/java-inheritance/</link>
      <pubDate>Thu, 22 Oct 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/22/java-inheritance/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;inheritance&#34;&gt;Inheritance&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_inheritance.svg&#34; alt=&#34;java_inheritance&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;access&#34;&gt;Access&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Modifiers
&lt;ul&gt;
&lt;li&gt;protected
&lt;ul&gt;
&lt;li&gt;Visible to child class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;private&lt;/li&gt;
&lt;li&gt;public&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Encapsulation
&lt;ul&gt;
&lt;li&gt;Using API to communicate&lt;/li&gt;
&lt;li&gt;Class or members can be least accessed by external&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Child class rewrites the parent class
&lt;ul&gt;
&lt;li&gt;Methods in child class must have higher access level&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Field can&amp;rsquo;t be public
&lt;ul&gt;
&lt;li&gt;getter&lt;/li&gt;
&lt;li&gt;setter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;abstract-class-and-interface&#34;&gt;Abstract class and Interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Abstract class
&lt;ul&gt;
&lt;li&gt;abstract keyword
&lt;ul&gt;
&lt;li&gt;abstract method -&amp;gt; abstract class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t be instanced&lt;/li&gt;
&lt;li&gt;Can be inherited&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interface
&lt;ul&gt;
&lt;li&gt;public field
&lt;ul&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;final&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Members(field and method)
&lt;ul&gt;
&lt;li&gt;public&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Difference
&lt;ul&gt;
&lt;li&gt;Abstract class provide a IS-A relationship
while Interface provides a LIKE-A relationship&lt;/li&gt;
&lt;li&gt;One class can applied several interfaces
but can&amp;rsquo;t inherit more than one abstract class&lt;/li&gt;
&lt;li&gt;Fields of interface must be static/final
but abstract class has no restriction&lt;/li&gt;
&lt;li&gt;Members of interface must be public
but abstract class have multiple accesses&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Choose
&lt;ul&gt;
&lt;li&gt;Interface
(higher priority)
&lt;ul&gt;
&lt;li&gt;Irrelevant classes need to realize the same method&lt;/li&gt;
&lt;li&gt;need to use multiple inheritance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Abstract class
&lt;ul&gt;
&lt;li&gt;Relevant classes need to share same code block&lt;/li&gt;
&lt;li&gt;Need to control members&amp;rsquo; access&lt;/li&gt;
&lt;li&gt;Need to inherit non-static or no-constant field&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;super&#34;&gt;Super&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Access parent classes&amp;rsquo; constructor&lt;/li&gt;
&lt;li&gt;Access members of parent classes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;method-priority&#34;&gt;Method priority&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;this.func(this)&lt;/li&gt;
&lt;li&gt;super.func(this)&lt;/li&gt;
&lt;li&gt;this.func(super)&lt;/li&gt;
&lt;li&gt;super.func(super)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;override&#34;&gt;Override&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Child class realizes the same method as its parent class (statement)&lt;/li&gt;
&lt;li&gt;Restrictions
(using @override to check)
&lt;ul&gt;
&lt;li&gt;Child class method has higher access&lt;/li&gt;
&lt;li&gt;Child class returns the same type (or sub type)&lt;/li&gt;
&lt;li&gt;Child class throws the same Exception type or sub type&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;overload&#34;&gt;Overload&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Same method name&lt;/li&gt;
&lt;li&gt;Different parameter/amount/order
(at least one)&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Reflect</title>
      <link>https://www.pseudoyu.com/en/2020/10/22/java-reflect/</link>
      <pubDate>Thu, 22 Oct 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/22/java-reflect/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;reflect&#34;&gt;Reflect&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_reflect.svg&#34; alt=&#34;java_reflect&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;core-concept&#34;&gt;Core concept&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Load classes, methods/fields when JVM is running,
no prior requirement of knowing the object when writing or compiling code&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;functions&#34;&gt;Functions&lt;/h3&gt;
&lt;p&gt;(runtime)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enables java code to discover information about the fields, methods and constructors of loaded classes&lt;/li&gt;
&lt;li&gt;Operate on their underlying counterparts within security restructions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Develop universal frameworks&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;javalangreflect&#34;&gt;java.lang.reflect&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Field&lt;/li&gt;
&lt;li&gt;Method&lt;/li&gt;
&lt;li&gt;Constructor&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;advantages&#34;&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Extensibility&lt;/li&gt;
&lt;li&gt;Help with development (IDE)&lt;/li&gt;
&lt;li&gt;Help with debugging and testing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;disadvantages&#34;&gt;Disadvantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Cost/Optimization&lt;/li&gt;
&lt;li&gt;Security restructions&lt;/li&gt;
&lt;li&gt;Exposing inner elements (private attributes or methods)&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Mining</title>
      <link>https://www.pseudoyu.com/en/2020/10/22/blockchain-bitcoin-mining/</link>
      <pubDate>Thu, 22 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/22/blockchain-bitcoin-mining/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;mining&#34;&gt;Mining&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_mining.svg&#34; alt=&#34;blockchain_bitcoin_mining&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solve puzzles
&lt;ul&gt;
&lt;li&gt;Average block time
&lt;ul&gt;
&lt;li&gt;10 minutes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Difficulty
&lt;ul&gt;
&lt;li&gt;Target = target * (actual time / expected time)&lt;/li&gt;
&lt;li&gt;Adjust every 2 weeks&lt;/li&gt;
&lt;li&gt;Ar most 4 times, at least 1/4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bernoulli process (nearly poisson process in BitCoin mining)
&lt;ul&gt;
&lt;li&gt;Bernoulli trial
&lt;ul&gt;
&lt;li&gt;A random experiment
with binary outcome&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A sequence of independent Bernoulli trial&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Feature
&lt;ul&gt;
&lt;li&gt;Memoryless&lt;/li&gt;
&lt;li&gt;Progress free
&lt;ul&gt;
&lt;li&gt;Ensure the fairness of mining&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exponential distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Device (Universal -&amp;gt; Specific)
&lt;ul&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;GPU&lt;/li&gt;
&lt;li&gt;ASIC (Application Specific Integrated Circuit))&lt;/li&gt;
&lt;li&gt;Mining pool (on demand mining)
&lt;ul&gt;
&lt;li&gt;Pool manager (risks of 51% attack)&lt;/li&gt;
&lt;li&gt;miners&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Features</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/blockchain-bitcoin-features/</link>
      <pubDate>Wed, 21 Oct 2020 22:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/blockchain-bitcoin-features/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_features.svg&#34; alt=&#34;blockchain_bitcoin_features&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;utxo-unspent-transaction-output&#34;&gt;UTXO (Unspent Transaction Output)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Total inputs = total outputs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;quantity&#34;&gt;Quantity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;21,000,000&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;block-reward&#34;&gt;Block reward&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Coinbase transaction&lt;/li&gt;
&lt;li&gt;Cut half every 4 year&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;transaction-fee&#34;&gt;Transaction fee&lt;/h3&gt;
&lt;h3 id=&#34;bitcoin-network&#34;&gt;BitCoin network&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Structure
&lt;ul&gt;
&lt;li&gt;Application layer
&lt;ul&gt;
&lt;li&gt;BitCoin blockchain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Network layer
&lt;ul&gt;
&lt;li&gt;P2P overlay network&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node
&lt;ul&gt;
&lt;li&gt;Seed node&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Feature
&lt;ul&gt;
&lt;li&gt;Simple&lt;/li&gt;
&lt;li&gt;Robust&lt;/li&gt;
&lt;li&gt;Not efficient&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Best effort&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Message transport
&lt;ul&gt;
&lt;li&gt;Flooding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;security&#34;&gt;Security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Problem
&lt;ul&gt;
&lt;li&gt;Sybil attack&lt;/li&gt;
&lt;li&gt;Forking attack&lt;/li&gt;
&lt;li&gt;Boycott&lt;/li&gt;
&lt;li&gt;Selfish mining
&lt;ul&gt;
&lt;li&gt;Reduce competition&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Solution
&lt;ul&gt;
&lt;li&gt;Based on computing power (large cost)&lt;/li&gt;
&lt;li&gt;Require 6 confirmation by nodes (long time, about 1 hour)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>ICOM6045 Topic 1 Cryptography</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/icom6045-topic-1-cryptography/</link>
      <pubDate>Wed, 21 Oct 2020 19:53:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/icom6045-topic-1-cryptography/</guid>
      
        <description>&lt;h1 id=&#34;icom6045-fundamentals-of-e-commerce-security&#34;&gt;ICOM6045 Fundamentals of E-Commerce Security&lt;/h1&gt;
&lt;h2 id=&#34;topic-1-cryptography&#34;&gt;Topic 1 Cryptography&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/cryptography.svg&#34; alt=&#34;cryptography&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;definition&#34;&gt;Definition&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Process of transforming information to make it unreadable to anyone except those possessing the key&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Data confidentiality&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transpositionspermutations&#34;&gt;Transpositions/Permutations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An encryption in which the letters of the message are rearranged&lt;/li&gt;
&lt;li&gt;Function
&lt;ul&gt;
&lt;li&gt;Try to break established patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example
&lt;ul&gt;
&lt;li&gt;Columnar transposition
&lt;ul&gt;
&lt;li&gt;Rearrangement of the characters of the plaintext into columns&lt;/li&gt;
&lt;li&gt;Based on characteristic patterns of pairs of adjacent letters, called digrams&lt;/li&gt;
&lt;li&gt;Analysis
&lt;ul&gt;
&lt;li&gt;Compute the letter frequencies
&lt;ul&gt;
&lt;li&gt;Break the text into columns by compare a block of ciphertext characters against characters successively farther away in the ciphertext.&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Do common digrams appear.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Do most of the digram look reasonable&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Complexity
&lt;ul&gt;
&lt;li&gt;No additional work&lt;/li&gt;
&lt;li&gt;Require storage for all characters of the message&lt;/li&gt;
&lt;li&gt;Not good for long message&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Alternative
&lt;ul&gt;
&lt;li&gt;Permute the characters of the plaintext with a fixed period d&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;confusion&#34;&gt;Confusion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cipher that makes relationship between the plaintext/key pair and the ciphertext as complex as possible&lt;/li&gt;
&lt;li&gt;Good confusion
&lt;ul&gt;
&lt;li&gt;poly-alphabetic substitution with a long key&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bad confusion
&lt;ul&gt;
&lt;li&gt;Caesar cipher&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;diffusion&#34;&gt;Diffusion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cipher that spreads the information from the plaintext over the entire ciphertext&lt;/li&gt;
&lt;li&gt;Change in the plaintext should affect many parts of the ciphertext&lt;/li&gt;
&lt;li&gt;Good diffusion
&lt;ul&gt;
&lt;li&gt;DES&lt;/li&gt;
&lt;li&gt;Transposition cipher&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bad diffusion
&lt;ul&gt;
&lt;li&gt;Substitutin cipher&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cryptanalysis&#34;&gt;Cryptanalysis&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Index of coincidence (A tool to rate how wella particular distribution
matches the distribution of letter in English)&lt;/li&gt;
&lt;li&gt;Procedure
&lt;ul&gt;
&lt;li&gt;Measure of roughness(variance)&lt;/li&gt;
&lt;li&gt;If the distribution is perfectly flat&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Examine
&lt;ul&gt;
&lt;li&gt;Is it encrypted&lt;/li&gt;
&lt;li&gt;How is it encrypted&lt;/li&gt;
&lt;li&gt;What is the key&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;types&#34;&gt;Types&lt;/h2&gt;
&lt;h3 id=&#34;symmetric-key-encryption&#34;&gt;Symmetric Key Encryption&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Procedure (Single key)
&lt;ul&gt;
&lt;li&gt;Original message&lt;/li&gt;
&lt;li&gt;Key -&amp;gt; Encryption algorithm&lt;/li&gt;
&lt;li&gt;Encrypted message&lt;/li&gt;
&lt;li&gt;Encrypted message sent over Internet&lt;/li&gt;
&lt;li&gt;Encrypted message arrives destination&lt;/li&gt;
&lt;li&gt;Key -&amp;gt; Decryption algorithm&lt;/li&gt;
&lt;li&gt;Original message&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Algorithms
&lt;ul&gt;
&lt;li&gt;DES(Data Encryption Standard)
&lt;ul&gt;
&lt;li&gt;Most commonly used block cipher&lt;/li&gt;
&lt;li&gt;Purpose
&lt;ul&gt;
&lt;li&gt;Facilitate hardware implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Form
&lt;ul&gt;
&lt;li&gt;A block cipher with 56-bit key (64-bit including parity bits)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Feistel&amp;rdquo; network structure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AES(Advanced Encryption Standard)&lt;/li&gt;
&lt;li&gt;RC4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stream cipher
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;Convert one symbol of plaintext immediately into a symbol of ciphertext&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Advantage
&lt;ul&gt;
&lt;li&gt;Speed of transformation&lt;/li&gt;
&lt;li&gt;Low error propagation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Disadvantage
&lt;ul&gt;
&lt;li&gt;Low diffusion&lt;/li&gt;
&lt;li&gt;Possible for malicious insertions and modifications&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Block cipher
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;Encrypt a group of plaintext symbol as one block&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Advantage
&lt;ul&gt;
&lt;li&gt;Diffusion&lt;/li&gt;
&lt;li&gt;Immunity to insertion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Disadvantage
&lt;ul&gt;
&lt;li&gt;Slowness of encryption&lt;/li&gt;
&lt;li&gt;Error propagation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kasiski method
&lt;ul&gt;
&lt;li&gt;Search for repeated sequence of characters&lt;/li&gt;
&lt;li&gt;Example
&lt;ul&gt;
&lt;li&gt;3 occurrences of the 11-character sequence&lt;/li&gt;
&lt;li&gt;Distance between first 2 sequence = 141- 90 = 51&lt;/li&gt;
&lt;li&gt;Distance between second 2 sequences = 213 - 141 = 72&lt;/li&gt;
&lt;li&gt;The common divisor between 51 and 72 is 3&lt;/li&gt;
&lt;li&gt;Estimated key length is 3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Perfect&amp;rdquo; substitution cipher
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;Many alphabets for an unrecognizable distribution&lt;/li&gt;
&lt;li&gt;No apparent pattern for the choice of an alphabet at a particular point&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Function
&lt;ul&gt;
&lt;li&gt;Confuse the Kasiski method&lt;/li&gt;
&lt;li&gt;Index of coincidence would be close to 0.038&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Application
&lt;ul&gt;
&lt;li&gt;Caesar cipher
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;The message is enciphered with a 27-symbol alphabet (A-&amp;gt;Z) and the blank, the blank is translated to itself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Permutation
&lt;ul&gt;
&lt;li&gt;Each letter is translated to a fixed number of letters after it in the alphabet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The &amp;ldquo;real&amp;rdquo; Caessar cipher by Julius Caesar used a shift of 3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mono-alphabetic substitutions
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;The alphabet is scrambled, and each plaintext letter maps to a unique ciphertext letter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Permutation
&lt;ul&gt;
&lt;li&gt;A permutation is a recording of the elements of a series&lt;/li&gt;
&lt;li&gt;A permutation can be a function&lt;/li&gt;
&lt;li&gt;Some permutations can&amp;rsquo;t be represented as simple equation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Weakness
&lt;ul&gt;
&lt;li&gt;Frequency distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Polyalphabetic substitutions
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;Combine distributions that are high with ones that are low&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Analysis
&lt;ul&gt;
&lt;li&gt;Use Kasiski method to predict likely numbers of enciphering alphabets&lt;/li&gt;
&lt;li&gt;If no numbers emerge fairly regularly, may not a poly-alphabetic substitution&lt;/li&gt;
&lt;li&gt;Compute the index of coincidence to validate the predictions from step 1&lt;/li&gt;
&lt;li&gt;When step 1 and 3 indicate a promising value, separate the ciphertext into appropriate subsets and independently compute index of coincidence of each subset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example
&lt;ul&gt;
&lt;li&gt;Rotor Machines&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vigenere cipher
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;Vigenere tableau
&lt;ul&gt;
&lt;li&gt;A collection of 26 permutations&lt;/li&gt;
&lt;li&gt;Written in a 26*26 matrix&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Permutation
&lt;ul&gt;
&lt;li&gt;Use a key (keyword) -&amp;gt; select  particular permutaion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;One-time pad
&lt;ul&gt;
&lt;li&gt;Definition
&lt;ul&gt;
&lt;li&gt;Based on a large nonrepeating set of keys (written on paper and glued together into a pad)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Procedure
&lt;ul&gt;
&lt;li&gt;Sender writes key one time above the letters of the plaintext&lt;/li&gt;
&lt;li&gt;Encipher the plaintext with a chart like Vigenere tableau&lt;/li&gt;
&lt;li&gt;Sender destroys the key&lt;/li&gt;
&lt;li&gt;Receiver takes the appropriate number of keys&lt;/li&gt;
&lt;li&gt;Decipher the message&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example
&lt;ul&gt;
&lt;li&gt;Vernam cipher
&lt;ul&gt;
&lt;li&gt;Involves an arbitrarily long nonrepeating sequence of numbers that are combined with the plaintext&lt;/li&gt;
&lt;li&gt;Possible attack
&lt;ul&gt;
&lt;li&gt;Random number generator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;public-key-encryption&#34;&gt;Public Key Encryption&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Procedure (Everyone has 2 keys)
&lt;ul&gt;
&lt;li&gt;Original message&lt;/li&gt;
&lt;li&gt;Encryption key -&amp;gt; Encryption algorithm
&lt;ul&gt;
&lt;li&gt;Plaintext &amp;lt;- Encryption
&lt;ul&gt;
&lt;li&gt;The original form of a message&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ciphertext &amp;lt;- Decryption
&lt;ul&gt;
&lt;li&gt;The encrypted form a message&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Original plaintext&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Encrypted message&lt;/li&gt;
&lt;li&gt;Encrypted message sent over Internet&lt;/li&gt;
&lt;li&gt;Encrypted message arrives destination&lt;/li&gt;
&lt;li&gt;Decryption key -&amp;gt; Decryption algorithm&lt;/li&gt;
&lt;li&gt;Original message&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Algorithms
&lt;ul&gt;
&lt;li&gt;RSA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Object Universal Functions</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/java-object-universal-functions/</link>
      <pubDate>Wed, 21 Oct 2020 12:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/java-object-universal-functions/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;object-universal-functions&#34;&gt;Object Universal Functions&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_object_functions.svg&#34; alt=&#34;java_object_functions&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;equals&#34;&gt;equals()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Equivalence relationship
&lt;ul&gt;
&lt;li&gt;x.euqal(x);
&lt;ul&gt;
&lt;li&gt;Compared to self&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;x.equals(y) == y.equals(x);
&lt;ul&gt;
&lt;li&gt;When conversed, also true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if (x.equals(y) &amp;amp;&amp;amp; y.equals(z))
x.equals(z);
&lt;ul&gt;
&lt;li&gt;When transited, also true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;x.equals(y) == x.equals(y);
&lt;ul&gt;
&lt;li&gt;When repeated, always true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;x.equals(null) == false;
&lt;ul&gt;
&lt;li&gt;When compared to null, always false (when x is not assigned null)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;About ==
&lt;ul&gt;
&lt;li&gt;For primitive data type, == measures the equivalence (there is no equals())&lt;/li&gt;
&lt;li&gt;For reference, == measures whether the variables reference to the same object or not&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mechanism
&lt;ul&gt;
&lt;li&gt;Check if it refers to the same object
&lt;ul&gt;
&lt;li&gt;Yes, return true&lt;/li&gt;
&lt;li&gt;No, continue&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Check their type
&lt;ul&gt;
&lt;li&gt;No, return false&lt;/li&gt;
&lt;li&gt;Yes, continue&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Convert the object&lt;/li&gt;
&lt;li&gt;Check the equivalence of every key fields&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hashcode&#34;&gt;hashCode()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;hashCode() returns a hash value,
and use equals() to check the equivalence
&lt;ul&gt;
&lt;li&gt;equal -&amp;gt; same hash&lt;/li&gt;
&lt;li&gt;same hash can&amp;rsquo;t -&amp;gt; equal (hash generated randomly)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cover hashCode() before equals()&lt;/li&gt;
&lt;li&gt;Add/realize hashCode() before using HashSet or HashMap class&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;clone&#34;&gt;clone()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Object protected function&lt;/li&gt;
&lt;li&gt;Shallow clone
&lt;ul&gt;
&lt;li&gt;Cloned object and the original object refer to the same object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deep clone
&lt;ul&gt;
&lt;li&gt;Cloned object and the original object refer to different object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Alternative method
&lt;ul&gt;
&lt;li&gt;Clone constructor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tostring&#34;&gt;toString()&lt;/h3&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Protocol</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/blockchain-protocol/</link>
      <pubDate>Wed, 21 Oct 2020 12:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/blockchain-protocol/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;protocol&#34;&gt;Protocol&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_protocol.svg&#34; alt=&#34;blockchain_protocol&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;distributed-consensus&#34;&gt;Distributed consensus&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Impossibility result&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;FLP
&lt;ul&gt;
&lt;li&gt;In an asynchronous system, if one faulty exists, there is no consensus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CAP Theorem
&lt;ul&gt;
&lt;li&gt;Consistency&lt;/li&gt;
&lt;li&gt;Availability&lt;/li&gt;
&lt;li&gt;Partition tolerance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example
&lt;ul&gt;
&lt;li&gt;Distributed hash table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;consensus-in-bitcoin&#34;&gt;Consensus in BitCoin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Membership (decide who can vote)
&lt;ul&gt;
&lt;li&gt;Hyperledger
&lt;ul&gt;
&lt;li&gt;Fabric&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vote by computing power (based on puzzle friendly)&lt;/li&gt;
&lt;li&gt;Increasing concern
&lt;ul&gt;
&lt;li&gt;Win
&lt;ul&gt;
&lt;li&gt;Longest valid chain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lose
&lt;ul&gt;
&lt;li&gt;Orphan block&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Keywords</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/java-keywords/</link>
      <pubDate>Wed, 21 Oct 2020 11:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/java-keywords/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;keywords&#34;&gt;Keywords&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_keywords.svg&#34; alt=&#34;java_keywords&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;final&#34;&gt;final&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Data
&lt;ul&gt;
&lt;li&gt;As for primitive data type, final make its value immutable&lt;/li&gt;
&lt;li&gt;As for reference, it can&amp;rsquo;t reference other objects but can modify itself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Method
&lt;ul&gt;
&lt;li&gt;Methods stated can&amp;rsquo;t be rewrite by its child class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Class
&lt;ul&gt;
&lt;li&gt;Can&amp;rsquo;t be inherited&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static&#34;&gt;static&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Variable
&lt;ul&gt;
&lt;li&gt;static variable
(also called class variable)
&lt;ul&gt;
&lt;li&gt;Belongs to the class
and can be shared/accessed by the class name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;instance variable
&lt;ul&gt;
&lt;li&gt;When creating an instance there will be an instance variable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static method
&lt;ul&gt;
&lt;li&gt;It exists when loading the class&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t rely on any instance&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t be abstract&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t contain this, super keywords
(they are related to specific object)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static (initialization) block
&lt;ul&gt;
&lt;li&gt;Operate once when doing the class initialization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static inner class
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t rely on external instance&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t access non-static variables or methods of external class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static import
&lt;ul&gt;
&lt;li&gt;No need to refer to the ClassName
&lt;ul&gt;
&lt;li&gt;Simplify&lt;/li&gt;
&lt;li&gt;Hard to read&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Initialization order
&lt;ul&gt;
&lt;li&gt;static variable, static block (Parent class)&lt;/li&gt;
&lt;li&gt;static variable, static block (Child class)&lt;/li&gt;
&lt;li&gt;instance variable, block (Parent class)&lt;/li&gt;
&lt;li&gt;Constructor (Parent class)&lt;/li&gt;
&lt;li&gt;instance variable, block (Child class)&lt;/li&gt;
&lt;li&gt;Constructor (Child class)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Operation</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/java-operation/</link>
      <pubDate>Wed, 21 Oct 2020 10:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/java-operation/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;operation&#34;&gt;Operation&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_operation.svg&#34; alt=&#34;java_operation&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;compare&#34;&gt;Compare&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pass by value
(Java use pass-by-value to pass parameters)
&lt;ul&gt;
&lt;li&gt;Change object&amp;rsquo;s value in a function
will affect the original object&amp;rsquo;s value (same object)&lt;/li&gt;
&lt;li&gt;When referencing to a new object,
change won&amp;rsquo;t affect the original object&amp;rsquo;s value (different object)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pass by reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;casting&#34;&gt;Casting&lt;/h3&gt;
&lt;p&gt;(compiler force to convert types using (type of))&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+=&lt;/li&gt;
&lt;li&gt;-=&lt;/li&gt;
&lt;li&gt;*=&lt;/li&gt;
&lt;li&gt;/=&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;switch&#34;&gt;switch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use string object in switch conditional statements&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Data Structure</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/blockchain-data-structure/</link>
      <pubDate>Wed, 21 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/blockchain-data-structure/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;data-structure&#34;&gt;Data Structure&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_data_structure.svg&#34; alt=&#34;blockchain_data_structure&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hash-pointer-blockchain-is-a-linked-list&#34;&gt;Hash pointer (blockchain is a linked list&lt;/h3&gt;
&lt;p&gt;using hash pointers)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Genesis block &amp;lt;- block1 &amp;lt;- block2 &amp;lt;-&amp;hellip;&amp;lt;- recent block (every block has a hash pointer)&lt;/li&gt;
&lt;li&gt;Tamper-event log&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;merkle-tree-using-hash-pointer-instead-of-pointer&#34;&gt;Merkle tree (using hash pointer instead of pointer)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Merkle proof (proof of membership/inclusion)
&lt;ul&gt;
&lt;li&gt;O(log(n))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Think: proof of non-membership
&lt;ul&gt;
&lt;li&gt;O(n)&lt;/li&gt;
&lt;li&gt;Sorted merkle tree: O(log(n))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;application-blockchain&#34;&gt;Application (blockchain)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Node
&lt;ul&gt;
&lt;li&gt;Full node (fully validating node)
&lt;ul&gt;
&lt;li&gt;Block header
&lt;ul&gt;
&lt;li&gt;Version&lt;/li&gt;
&lt;li&gt;Hash of previous block header&lt;/li&gt;
&lt;li&gt;Merkle root hash (protect all nodes)&lt;/li&gt;
&lt;li&gt;Target&lt;/li&gt;
&lt;li&gt;Nonce&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Block body
&lt;ul&gt;
&lt;li&gt;Transaction lists&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Light node (light weight node)
&lt;ul&gt;
&lt;li&gt;Only store block headers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem
&lt;ul&gt;
&lt;li&gt;Double spending&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
  </channel>
</rss>
