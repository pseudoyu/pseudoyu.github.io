<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on Pseudoyu</title>
    <link>https://www.pseudoyu.com/en/tag/algorithm/</link>
    <description>Recent content in algorithm on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Nov 2020 11:00:17 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/tag/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 167 Two Sum 2</title>
      <link>https://www.pseudoyu.com/en/2020/11/05/leetcode-167-two-sum-2/</link>
      <pubDate>Thu, 05 Nov 2020 11:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/05/leetcode-167-two-sum-2/</guid>
      <description>LeetCode #167 Two Sum 2 (Input array is sorted) Problem Description Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Note: Your returned answers (both index1 and index2) are</description>
    </item>
    
    <item>
      <title>Timus 2012 About Grisha N</title>
      <link>https://www.pseudoyu.com/en/2020/11/03/timus-2012-about-grisha-n/</link>
      <pubDate>Tue, 03 Nov 2020 02:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/03/timus-2012-about-grisha-n/</guid>
      <description>Timus 2012 About Grisha N Problem Description Grisha N. told his two teammates that he was going to solve all given problems at the subregional contest, even if the teammates wouldn’t show up at the competition. The teammates didn’t believe Grisha so he told them the plan how he was going to do this.
During the first hour he wants to solve f problems. If there is still some time left to the end of the first hour, Grisha will simply walk along the hall.</description>
    </item>
    
    <item>
      <title>Timus 1877 Bicycle Codes</title>
      <link>https://www.pseudoyu.com/en/2020/11/03/timus-1877-bicycle-codes/</link>
      <pubDate>Tue, 03 Nov 2020 01:30:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/03/timus-1877-bicycle-codes/</guid>
      <description>Timus 1877 Bicycle Codes Problem Description Den has two four-digit combination locks for protecting his bicycle from thieves. Every evening he arms the bicycle antitheft alarm and fastens the bicycle to a special stand with one of the locks. Den never uses the same lock two evenings in a row. One night a thief tried to open the lock using the code 0000. The alarm went off and the thief hurried away.</description>
    </item>
    
    <item>
      <title>Timus 1785 Lost in Localization</title>
      <link>https://www.pseudoyu.com/en/2020/11/03/timus-1785-lost-in-localization/</link>
      <pubDate>Tue, 03 Nov 2020 01:10:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/03/timus-1785-lost-in-localization/</guid>
      <description>Timus 1785 Lost in Localization Problem Description The Lavin Interactive Company, which has developed the turn-based strategy Losers-V, is constantly extending its target market by localizing the game to as many languages as it can. In particular, they are interested in creating a version of the game in Anindilyakwa, which is one of the languages spoken by indigenous Australians.
However, the localization is complicated by the fact that Anindilyakwa has no numerals.</description>
    </item>
    
    <item>
      <title>Timus 1409 Two Gangsters</title>
      <link>https://www.pseudoyu.com/en/2020/11/03/timus-1409-two-gangsters/</link>
      <pubDate>Tue, 03 Nov 2020 00:40:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/03/timus-1409-two-gangsters/</guid>
      <description>Timus 1409 Two Gangsters Problem Description Two gangsters Harry and Larry had a rest at countryside. They decided to spend some time shooting, so they put several beer cans (no more than 10) on a log. Harry started to shoot cans one after another from the leftmost to the right and Larry – from the rightmost to the left. At some moment it happened so that they shot one and the same can.</description>
    </item>
    
    <item>
      <title>Timus 1293 Eniya</title>
      <link>https://www.pseudoyu.com/en/2020/11/03/timus-1293-eniya/</link>
      <pubDate>Tue, 03 Nov 2020 00:10:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/03/timus-1293-eniya/</guid>
      <description>Timus 1293 Eniya Problem Description It’s restless now on the slips of the intergalactic port’s sixth dock of planet of Torn. No longer then in a month the reconstruction of the small ironclad corvette “Eniya” will be finished. And again this battle ship and its brave team would have to struggle for the control over plutonium mines of Sibelius. The work cannot be stopped even for a second, self-powered laser welders work round the clock.</description>
    </item>
    
    <item>
      <title>Timus 1001 Reverse Root</title>
      <link>https://www.pseudoyu.com/en/2020/11/02/timus-1001-reverse-root/</link>
      <pubDate>Mon, 02 Nov 2020 23:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/02/timus-1001-reverse-root/</guid>
      <description>Timus 1001 Reverse Root Problem Description The problem is so easy, that the authors were lazy to write a statement for it!
Input: The input stream contains a set of integer numbers Ai. The numbers are separated by any number of spaces and line breaks. A size of the input stream does not exceed 256 KB.
Output: For each number Ai from the last one till the first one you should output its square root.</description>
    </item>
    
    <item>
      <title>Timus 1000 A&#43;B Problem</title>
      <link>https://www.pseudoyu.com/en/2020/11/02/timus-1000-a-b-problem/</link>
      <pubDate>Mon, 02 Nov 2020 22:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/02/timus-1000-a-b-problem/</guid>
      <description>Timus 1000 A+B Problem Problem Description Calculate a + b
Input: a and b
Output: a+b
My Solution import java.util.*; public class problem1000 { public static void main(String[] args) { Scanner in = new Scanner(System.in); int a = in.nextInt(); int b = in.nextInt(); in.close(); System.out.println(a + b); } } </description>
    </item>
    
    <item>
      <title>LeetCode 1 Two Sum</title>
      <link>https://www.pseudoyu.com/en/2020/11/02/leetcode-1-two-sum/</link>
      <pubDate>Mon, 02 Nov 2020 20:53:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/02/leetcode-1-two-sum/</guid>
      <description>LeetCode #1 Two Sum Problem Description Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. Example 1: Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because</description>
    </item>
    
    <item>
      <title>COMP7404 Topic 3 Adversarial Search</title>
      <link>https://www.pseudoyu.com/en/2020/10/05/comp7404-topic-3-adversarial-search/</link>
      <pubDate>Mon, 05 Oct 2020 00:30:11 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/05/comp7404-topic-3-adversarial-search/</guid>
      <description>COMP7404 Computational Intelligence and Machine Learning Topic 3 Adversarial Search A Multi-agent Competitive Environment
 Other agents are planning against us Goals are in conflict (not necessarily)  Game Definition
 A game can be defined as  s : States s0: Initial state Player(s) : Defines which player has the move Actions(s) : Returns a set of legal moves Result(s,a) : Defines the result of a move TerminalTest(s) : True when game is over, false otherwise Utility(s,p) : Defines the final numeric value for a game that ends in terminal state s for player p   A game tree can be constructed  Nodes are game states and edges are moves    Tic-Tac-Toe Game Tree</description>
    </item>
    
    <item>
      <title>COMP7404 Topic 2 Beyond Classical Search</title>
      <link>https://www.pseudoyu.com/en/2020/10/04/comp7404-topic-2-beyond-classical-search/</link>
      <pubDate>Sun, 04 Oct 2020 21:30:11 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/04/comp7404-topic-2-beyond-classical-search/</guid>
      <description>COMP7404 Computational Intelligence and Machine Learning Topic 2 Beyond Classical Search Planning vs Identification
 Planing: sequence of actions  The path to the goal is the important thing Paths have various costs, depths Heuristics to guide, frontier to keep backups   Identification: assignments to variables  The goal itself is important, not the path    Local Search can find solutions faster for specific types of identification problems</description>
    </item>
    
    <item>
      <title>COMP7404 Topic 1 Solving Problems by Searching</title>
      <link>https://www.pseudoyu.com/en/2020/09/16/comp7404-topic-1-solving-problems-by-searching/</link>
      <pubDate>Wed, 16 Sep 2020 00:28:11 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/09/16/comp7404-topic-1-solving-problems-by-searching/</guid>
      <description>COMP7404 Computational Intelligence and Machine Learning Topic 1 Solving Problems by Searching Types of Search
 Uninformed Search (Know nothing about the problem except definition) Informed Search (know something more like how close to the goal) Local Search (Randomly initilize a state and make it better, e.g. Deep Learning) Constraint Satisfaction Problems (Know more about the problem) Adversarial Search (have an opponent, e.g. chess, star craft game)  Is Search the same as Unsupervised/Supervised Learning?</description>
    </item>
    
  </channel>
</rss>
