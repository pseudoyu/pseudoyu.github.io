<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Pseudoyu</title>
    <link>https://www.pseudoyu.com/en/posts/</link>
    <description>Recent content in Posts on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 17 Feb 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用OKR的方式梳理自己的学习计划</title>
      <link>https://www.pseudoyu.com/en/2021/02/17/learning_plan_okr/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2021/02/17/learning_plan_okr/</guid>
      <description>用一句话形容理想情况下，自己想要达到的状态 具体目标范围：提升编程技术能力 时间周期：2个月 描述：我想要成为一名具备过硬的编程能力的开发者，并对</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 线程组和线程优先级</title>
      <link>https://www.pseudoyu.com/en/2020/12/07/java_note_concurrent_threadgroup/</link>
      <pubDate>Mon, 07 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/07/java_note_concurrent_threadgroup/</guid>
      <description>线程组和线程优先级 线程组 Java中的ThreadGroup表示线程组，可使用线程组对线程进行批量控制；每个线程必须存在于一个线程组中，不能独</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 多线程入门类和接口</title>
      <link>https://www.pseudoyu.com/en/2020/12/05/java_note_concurrent_practice/</link>
      <pubDate>Sat, 05 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/05/java_note_concurrent_practice/</guid>
      <description>多线程入门类和接口 Java中使用多线程的方法 由于Java单继承多实现的特性，Runnable接口用起来比Thread更灵活 Runnable接</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 文件与I/O流</title>
      <link>https://www.pseudoyu.com/en/2020/12/02/java_note_io/</link>
      <pubDate>Wed, 02 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/12/02/java_note_io/</guid>
      <description>IO流 分类 流的流向 输入流 输出流 操作单元 字节流 字符流 角色 节点流 处理流 抽象类基类 InputStream（字节流）/Reader（字符流） Outp</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 多线程</title>
      <link>https://www.pseudoyu.com/en/2020/11/29/java_note_concurrent/</link>
      <pubDate>Sun, 29 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/29/java_note_concurrent/</guid>
      <description>多线程 线程、程序、进程的基本概念 线程 比进程更小的执行单位，一个进程在执行的过程中可以产生多个线程 同类的多个线程共享同一块内存空间和一组系统资</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 常用方法</title>
      <link>https://www.pseudoyu.com/en/2020/11/27/java_note_methods/</link>
      <pubDate>Fri, 27 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/27/java_note_methods/</guid>
      <description>String与StringBuffer String 特征 Java8中，String内部使用char数组存储数据 Java9后，String类的实现改用了b</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 集合</title>
      <link>https://www.pseudoyu.com/en/2020/11/25/java_note_collections/</link>
      <pubDate>Wed, 25 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/25/java_note_collections/</guid>
      <description>集合类 概述 为了在程序中保存数目不确定的对象，JDK中提供了一系列特殊的类，这些类可以存储任意类型的对象且长度可变，称为集合，位于java.u</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 面向对象</title>
      <link>https://www.pseudoyu.com/en/2020/11/23/java_note_oop/</link>
      <pubDate>Mon, 23 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/23/java_note_oop/</guid>
      <description>Java面向对象 特性 封装性：将对象的属性和行为封装起来，不需要让外界知道具体的实现细节 继承性：无需重新编写原有类的情况下，新类可拥有原有类的</description>
    </item>
    
    <item>
      <title>Java学习笔记 - 基础</title>
      <link>https://www.pseudoyu.com/en/2020/11/20/java_note_basic/</link>
      <pubDate>Fri, 20 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/20/java_note_basic/</guid>
      <description>Java基础 Java特性 简单性 丢弃了C++中运算符重载、多重继承等 不使用指针而是使用引用 自动垃圾回收机制（不用开发者进行内存管理） 面向对象 提</description>
    </item>
    
    <item>
      <title>xDeepFM for Recommender Systems</title>
      <link>https://www.pseudoyu.com/en/2020/11/11/comp7404_group_project/</link>
      <pubDate>Wed, 11 Nov 2020 16:30:25 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/11/11/comp7404_group_project/</guid>
      <description>xDeepFM for Recommender Systems eXtreme Deep Factorization Machine (xDeepFM)
This paper proposes a novel Compressed Interaction Network (CIN), which aims to generate feature interactions in an explicit fashion and at the vector-wise level.
Github Repository GitHub: xDeepFM_for_Recommender_Systems
Video Demo YouTube | Google Drive
Datasets  Criteo Dataset. It is a famous industry benchmarking dataset for developing models predicting ad click-through rate, and is publicly accessible. Given a user and the page he is visiting, the goal is to predict the probability that he will clik on a given ad  Running Environment I strongly recommmend that you use Anaconda to implement this project.</description>
    </item>
    
    <item>
      <title>ICOM6045 Topic 1 Cryptography</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/icom6045_topic1/</link>
      <pubDate>Wed, 21 Oct 2020 19:53:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/icom6045_topic1/</guid>
      <description>ICOM6045 Fundamentals of E-Commerce Security Topic 1 Cryptography Definition  Process of transforming information to make it unreadable to anyone except those possessing the key  Purpose  Data confidentiality  Transpositions/Permutations  An encryption in which the letters of the message are rearranged Function  Try to break established patterns   Example  Columnar transposition  Rearrangement of the characters of the plaintext into columns Based on characteristic patterns of pairs of adjacent letters, called digrams Analysis  Compute the letter frequencies  Break the text into columns by compare a block of ciphertext characters against characters successively farther away in the ciphertext.</description>
    </item>
    
    <item>
      <title>ICOM6012 Topic 4 Transport Layer</title>
      <link>https://www.pseudoyu.com/en/2020/10/20/icom6012_topic4/</link>
      <pubDate>Tue, 20 Oct 2020 09:37:44 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/20/icom6012_topic4/</guid>
      <description>ICOM6012 Internet Infrastructure Technologies Topic 4 Transport Layer Actions Sender  Get application layer message Determine segment header fields values Create segment Pass segment to IP  Receiver  Receive segment from IP Check header values Extract application layer message Demultiplexes message up to application via socket  Services Provide logical communication between processes Run in end system  Send side  Break app messages into segment Pass to network layer   Receive side  Reassembles segments into messages Pass to application layer    Protocols TCP  Features  Point-to-point  One sender, one receiver   Reliable, in-order byte system  No message boundaries   Full duplex data  Bi-directional data flow in same connection MSS: maximum segment size (excluding header)   Cumulative ACKs Pipelining  TCP congestion and flow control set window size   Flow Control  Sender will not overwhelm receiver   Congestion control   Concepts  Segment structure Sequence numbers  Byte stream &amp;ldquo;number&amp;rdquo; of first byte in segment&amp;rsquo;s data   Acknowledgements (ACKs)  Seq # of next byte expected from other side Cumulative ACKs     Procedure  Connection-oriented  Handshaking initializes sender, receiver state before data exchange TCP socket identified by 4-tuple  Source IP Source Port # Dest IP Dest Port #   Server host may support many simultaneous TCP sockets Web servers have different sockets for each connecting client (Non-persistent HTTP will have different socket for each request) Demux  Receiver uses all four values to direct segment to appropriate socket     3-way handshake  Connection setup   Connection management  Handshake  Agree to establish connection Agree on connection parameters     Retransmission Closing a connection   Events  Data received from application  Create segment with seq # (a byte-stream number of first data byte in segment) Start timer if not already running  Think of timer as for oldest unACKed segment Expiration interval: TimeOutInterval     Timeout  Retransmit segment that caused timeout Restart timer   ACK received  Update what is known to ACKed Start timer if there are still unACKed segment     Shortcomings  SYN DoS Attack  Half-open TCP connections consume all the TCP connection resources SYN packet with a spoofed source address      UDP   Features</description>
    </item>
    
    <item>
      <title>ICOM6012 Topic 3 Application Layer</title>
      <link>https://www.pseudoyu.com/en/2020/10/19/icom6012_topic3/</link>
      <pubDate>Mon, 19 Oct 2020 17:50:44 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/19/icom6012_topic3/</guid>
      <description>ICOM6012 Internet Infrastructure Technologies Topic 3 Application Layer Creating a Network App Run on different end systems Communication over network No need to write for network-core devices Client-Server Architecture (The Centralized Internet) Server Always-on host Permanent IP address Often in data centers (for scaling) Clients Contact, communicate with server May be intermittently connected May have dynamic IP addresses Don&amp;rsquo;t communicate directly with each other Peer-to-Peer (P2P) Architecture No always-on server</description>
    </item>
    
    <item>
      <title>A Look at Tik-Tok</title>
      <link>https://www.pseudoyu.com/en/2020/10/16/ecom6013_discussion_topic4/</link>
      <pubDate>Fri, 16 Oct 2020 09:19:19 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/16/ecom6013_discussion_topic4/</guid>
      <description>A Look at Tik-Tok Given there are many social media platforms already existing in US, what makes Tik-Tok so successful that it becomes a big enough threat to cause the US Government to act the way it did towards a commercial company (ignore political factors)? Economically, at about 2016, US tech giants such as Facebook or Google mainly focused on long video platform instead of the short video platform. A company called Musical.</description>
    </item>
    
    <item>
      <title>ECOM6013 Topic 8 Blockchain and Cybercurrency</title>
      <link>https://www.pseudoyu.com/en/2020/10/09/ecom6013_topic8/</link>
      <pubDate>Fri, 09 Oct 2020 11:01:28 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/09/ecom6013_topic8/</guid>
      <description>ECOM6013 E-Commerce Technologies Topic 8 Blockchain and Cybercurrency Form of Money
 Token money  Physical token Value is lost without the token No intermediary is required for spending Requires faith in the issuer (a government or a bank)   Notationary money  Notation/entry in a ledger, passbook, or database Can&amp;rsquo;t be lost Requires an intermediary Requires faith in the maintainer of the ledger   Hybrid money  Requires both a token and a ledger account Can be lost Requires an intermediary Requires faith in the issuer   Virtual money  No token/ledger Can be lost No intermediary required No issuer, no government backing   Digital money  String of bytes (data) stored on a device Value is lost/stolen when devices fail/invaded   Cybercurrency  Bitcoin is the most influential one Based on blockchain    Bitcoin</description>
    </item>
    
    <item>
      <title>ICOM6012 Topic 2 The Big Picture</title>
      <link>https://www.pseudoyu.com/en/2020/10/05/icom6012_topic2/</link>
      <pubDate>Mon, 05 Oct 2020 09:06:09 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/05/icom6012_topic2/</guid>
      <description>ICOM6012 Internet Infrastructure Technologies Topic 2 The Big Picture The Internet: &amp;ldquo;nuts and bolts&amp;rdquo; view
 Billions of connected computing devices  Host = end system Running network apps Internet of things (IoT)   Packet switches  routers switchers   Communication links  Fiber, copper, radio, satellite Transmission rate: bandwidth   Networks  Collection of devices, routers, switches, links Managed by an organization   Internet: &amp;ldquo;network of networks&amp;rdquo;  Interconnected ISPs   Protocols  Control sending, receiving of messages   Internet standards  RFC: Requests for Comments IETF: Internet Engineering Task Force IEEE: Institute of Electronical &amp;amp; Electronic Engineering    The Internet: a &amp;ldquo;service&amp;rdquo; view</description>
    </item>
    
    <item>
      <title>COMP7404 Topic 3 Adversarial Search</title>
      <link>https://www.pseudoyu.com/en/2020/10/05/comp7404_topic3/</link>
      <pubDate>Mon, 05 Oct 2020 00:30:11 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/05/comp7404_topic3/</guid>
      <description>COMP7404 Computational Intelligence and Machine Learning Topic 3 Adversarial Search A Multi-agent Competitive Environment
 Other agents are planning against us Goals are in conflict (not necessarily)  Game Definition
 A game can be defined as  s : States s0: Initial state Player(s) : Defines which player has the move Actions(s) : Returns a set of legal moves Result(s,a) : Defines the result of a move TerminalTest(s) : True when game is over, false otherwise Utility(s,p) : Defines the final numeric value for a game that ends in terminal state s for player p   A game tree can be constructed  Nodes are game states and edges are moves    Tic-Tac-Toe Game Tree</description>
    </item>
    
    <item>
      <title>COMP7404 Topic 2 Beyond Classical Search</title>
      <link>https://www.pseudoyu.com/en/2020/10/04/comp7404_topic2/</link>
      <pubDate>Sun, 04 Oct 2020 21:30:11 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/04/comp7404_topic2/</guid>
      <description>COMP7404 Computational Intelligence and Machine Learning Topic 2 Beyond Classical Search Planning vs Identification
 Planing: sequence of actions  The path to the goal is the important thing Paths have various costs, depths Heuristics to guide, frontier to keep backups   Identification: assignments to variables  The goal itself is important, not the path    Local Search can find solutions faster for specific types of identification problems</description>
    </item>
    
    <item>
      <title>Mobile Payment Systems Case Study</title>
      <link>https://www.pseudoyu.com/en/2020/10/01/ecom6013_discussion_topic3/</link>
      <pubDate>Thu, 01 Oct 2020 22:25:19 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/01/ecom6013_discussion_topic3/</guid>
      <description>Mobile Payment Systems Why has China been an ideal environment to support mobile payment systems? Politically, payment licenses are controlled by government (relative financial institutions) and under strict regulation. So, tech giants like Alibaba who are qualified can increasingly develop their payment business in the early age. Plus, in the early stage of mobile payment, laws and rules are not so completed. Payment platform can utilize smart market strategies (like very high return rate) to attract more new potential users and enhance existing users’ engagement, which is effective in market expanding stage.</description>
    </item>
    
    <item>
      <title>ECOM6013 Topic 7 E-Payment Systems</title>
      <link>https://www.pseudoyu.com/en/2020/09/27/ecom6013_topic7/</link>
      <pubDate>Sun, 27 Sep 2020 11:30:28 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/09/27/ecom6013_topic7/</guid>
      <description>ECOM6013 E-Commerce Technologies Topic 7 E-Payment Systems Payment System Stakeholders&#39; Priorities
 Customer  Low-risk Low-cost Refutable Convenience Reliable   Merchants  Low-risks Low-cost Irrefutable Secure Reliable   Financial intermediaries  Secure Low-risk Maximizing profit   Government regulators  Secure Trust Protecting participants and enforcing reporting    Type of Payment Systems
 Cash Cheque transfer Credit card Stored value Accumulating balance  B2C Payment System</description>
    </item>
    
  </channel>
</rss>
