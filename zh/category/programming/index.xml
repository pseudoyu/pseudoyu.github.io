<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Pseudoyu</title>
    <link>https://www.pseudoyu.com/zh/category/programming/</link>
    <description>Recent content in Programming on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 28 Mar 2021 16:30:17 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/zh/category/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IPFS文件存储模式详解</title>
      <link>https://www.pseudoyu.com/zh/2021/03/28/blockchain_note_ipfs_model/</link>
      <pubDate>Sun, 28 Mar 2021 16:30:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/03/28/blockchain_note_ipfs_model/</guid>
      <description>IPFS文件存储模式详解 CID (Content-ID) CID是IPFS分布式文件系统中标准的文件寻址格式 内容寻址 加密散列算法 自我描述 之前在IPFS用base58btc</description>
    </item>
    
    <item>
      <title>IPFS分布式文件存储入门</title>
      <link>https://www.pseudoyu.com/zh/2021/03/25/blockchain_note_ipfs/</link>
      <pubDate>Thu, 25 Mar 2021 18:46:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/03/25/blockchain_note_ipfs/</guid>
      <description>IPFS分布式文件存储入门 传统HTTP存在的问题 内容无法永久保存 非常浪费资源 安全问题 DDoS XSS CSRF IPFS简介 IPFS (InterPlanetary File System) 星际文件系统，是一个面向全球的</description>
    </item>
    
    <item>
      <title>区块链隐私问题概述</title>
      <link>https://www.pseudoyu.com/zh/2021/01/30/blockchain_note_privacy/</link>
      <pubDate>Sat, 30 Jan 2021 05:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/30/blockchain_note_privacy/</guid>
      <description>区块链隐私问题概述 区块链透明性 所有人都能看到交易细节/历史记录 应用场景：供应链 （食品、药品、酒&amp;hellip;） 隐私风险：个人信息（账户余额</description>
    </item>
    
    <item>
      <title>区块链安全问题概述</title>
      <link>https://www.pseudoyu.com/zh/2021/01/25/blockchain_note_security/</link>
      <pubDate>Mon, 25 Jan 2021 05:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/25/blockchain_note_security/</guid>
      <description>区块链安全问题概述 风险来源 应用层 与应用程序相关的攻击和安全问题，如数字货币交易所 智能合约层 很多潜在风险，如DAO事件 激励层 矿工付出成本 &amp;gt; 奖励</description>
    </item>
    
    <item>
      <title>比特币数据模型概述</title>
      <link>https://www.pseudoyu.com/zh/2021/01/22/blockchain_note_bitcoin_data/</link>
      <pubDate>Fri, 22 Jan 2021 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/22/blockchain_note_bitcoin_data/</guid>
      <description>比特币数据模型概述 区块头 前一个区块的哈希值 时间戳 Merkle Root Nonce Block Body 交易 输入 UTXO: Unspent outputs from another Transaction 必须以整体被花费，不能划分，多余部分转回源账户 所有输入都可以追</description>
    </item>
    
    <item>
      <title>Bitcoin Core客户端入门</title>
      <link>https://www.pseudoyu.com/zh/2021/01/19/blockchain_note_bitcoin_core/</link>
      <pubDate>Tue, 19 Jan 2021 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/19/blockchain_note_bitcoin_core/</guid>
      <description>Bitcoin Core客户端入门 比特币的实现 Bitcoin-QT Satoshi-client 特点 连接至比特币网络 可验证区块链 可以发送与接收区块链 网络 Mainnet Testnet Regnet Debug Console 与比特币区块链交互的工具 Blockchain getblockchaininfo: 返回有关区</description>
    </item>
    
    <item>
      <title>比特币基础原理</title>
      <link>https://www.pseudoyu.com/zh/2021/01/15/blockchain_note_bitcoin_basic/</link>
      <pubDate>Fri, 15 Jan 2021 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/15/blockchain_note_bitcoin_basic/</guid>
      <description>比特币基础原理 哈希指针 Hash Pointers 哈希指针指向一个结构体的哈希值（整个区块+其H()一起算出下一个值） 特征 tamper-evident log 如果这个区块被篡改，则会影响后续所有区</description>
    </item>
    
    <item>
      <title>区块链基本框架</title>
      <link>https://www.pseudoyu.com/zh/2021/01/11/blockchain_note_framework/</link>
      <pubDate>Mon, 11 Jan 2021 08:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/11/blockchain_note_framework/</guid>
      <description>区块链框架 交易 钱包 签名 内存池 网络 共识机制 哈希 区块 区块链 哈希 区块链使用的是SHA256(Secure Hashing Algorithm 256 bits) var SHA256 = require(&amp;#34;crypto-js/sha256&amp;#34;); const data1 = &amp;#34;Blockchain Rock!&amp;#34;; const dataObject = { id: 1, body: &amp;#34;With</description>
    </item>
    
    <item>
      <title>区块链基础原理</title>
      <link>https://www.pseudoyu.com/zh/2021/01/07/blockchain_note_concept/</link>
      <pubDate>Thu, 07 Jan 2021 05:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/07/blockchain_note_concept/</guid>
      <description>区块链基础原理 区块链是一种分布式账本技术，由于是一群人来记账，所以修改这个账本的难度比较高。 单式记账 → 复式记账 → 数字化记账 → 分布式记账 传统中</description>
    </item>
    
    <item>
      <title>区块链中的密码学原理</title>
      <link>https://www.pseudoyu.com/zh/2021/01/03/blockchain_note_cryptography/</link>
      <pubDate>Sun, 03 Jan 2021 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/03/blockchain_note_cryptography/</guid>
      <description>密码学原理 哈希 特征 collision resistance 抗碰撞性 哈希碰撞是指当x≠y时，存在H(x)=H(y)，不同的输入映射到哈希表的同一个位置 很难人工创造哈希碰撞 常用于文</description>
    </item>
    
    <item>
      <title>刷题常用数据结构（Java）</title>
      <link>https://www.pseudoyu.com/zh/2021/01/01/algorithm_java_data_structure/</link>
      <pubDate>Fri, 01 Jan 2021 00:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/01/algorithm_java_data_structure/</guid>
      <description>数组 [] 初始化 // 初始化一个大小为10，默认值为0的数组 int[] nums = new int[10]; // 初始化一个二位boolean数组 boolean[][] visited = new boolean[5][10]; 常用方法 // 函数开头一般要做一个非空</description>
    </item>
    
    <item>
      <title>Java学习 - 线程间的通信</title>
      <link>https://www.pseudoyu.com/zh/2020/12/23/java_note_concurrent_communication/</link>
      <pubDate>Wed, 23 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/23/java_note_concurrent_communication/</guid>
      <description>线程间的通信 锁与同步 Java中锁是基于对象的，因此也被称为对象锁 一个锁同一时间只能被一个线程持有 线程之间的同步是指线程按照一定的顺序执行 public class</description>
    </item>
    
    <item>
      <title>Java学习 - 线程状态及转化方法</title>
      <link>https://www.pseudoyu.com/zh/2020/12/09/java_note_concurrent_state/</link>
      <pubDate>Wed, 09 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/09/java_note_concurrent_state/</guid>
      <description>线程状态及转化方法 操作系统中的线程状态转换 操作系统线程主要有以下三个状态 就绪状态 READY：线程正在等待使用CPU，经调度程序调用之后可进入</description>
    </item>
    
    <item>
      <title>Java学习 - 线程组和线程优先级</title>
      <link>https://www.pseudoyu.com/zh/2020/12/07/java_note_concurrent_threadgroup/</link>
      <pubDate>Mon, 07 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/07/java_note_concurrent_threadgroup/</guid>
      <description>线程组和线程优先级 线程组 Java中的ThreadGroup表示线程组，可使用线程组对线程进行批量控制；每个线程必须存在于一个线程组中，不能独</description>
    </item>
    
    <item>
      <title>Java学习 - 多线程入门类和接口</title>
      <link>https://www.pseudoyu.com/zh/2020/12/05/java_note_concurrent_practice/</link>
      <pubDate>Sat, 05 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/05/java_note_concurrent_practice/</guid>
      <description>多线程入门类和接口 Java中使用多线程的方法 由于Java单继承多实现的特性，Runnable接口用起来比Thread更灵活 Runnable接</description>
    </item>
    
    <item>
      <title>Java学习 - 文件与I/O流</title>
      <link>https://www.pseudoyu.com/zh/2020/12/02/java_note_io/</link>
      <pubDate>Wed, 02 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/02/java_note_io/</guid>
      <description>IO流 分类 流的流向 输入流 输出流 操作单元 字节流 字符流 角色 节点流 处理流 抽象类基类 InputStream（字节流）/Reader（字符流） Outp</description>
    </item>
    
    <item>
      <title>Java学习 - 多线程</title>
      <link>https://www.pseudoyu.com/zh/2020/11/29/java_note_concurrent/</link>
      <pubDate>Sun, 29 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/29/java_note_concurrent/</guid>
      <description>多线程 线程、程序、进程的基本概念 线程 比进程更小的执行单位，一个进程在执行的过程中可以产生多个线程 同类的多个线程共享同一块内存空间和一组系统资</description>
    </item>
    
    <item>
      <title>Java学习 - 常用方法</title>
      <link>https://www.pseudoyu.com/zh/2020/11/27/java_note_methods/</link>
      <pubDate>Fri, 27 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/27/java_note_methods/</guid>
      <description>String与StringBuffer String 特征 Java8中，String内部使用char数组存储数据 Java9后，String类的实现改用了b</description>
    </item>
    
    <item>
      <title>Java学习 - 集合</title>
      <link>https://www.pseudoyu.com/zh/2020/11/25/java_note_collections/</link>
      <pubDate>Wed, 25 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/25/java_note_collections/</guid>
      <description>集合类 概述 为了在程序中保存数目不确定的对象，JDK中提供了一系列特殊的类，这些类可以存储任意类型的对象且长度可变，称为集合，位于java.u</description>
    </item>
    
    <item>
      <title>Java学习 - 面向对象</title>
      <link>https://www.pseudoyu.com/zh/2020/11/23/java_note_oop/</link>
      <pubDate>Mon, 23 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/23/java_note_oop/</guid>
      <description>Java面向对象 特性 封装性：将对象的属性和行为封装起来，不需要让外界知道具体的实现细节 继承性：无需重新编写原有类的情况下，新类可拥有原有类的</description>
    </item>
    
  </channel>
</rss>
