<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notes on Pseudoyu</title>
    <link>https://www.pseudoyu.com/zh/tag/notes/</link>
    <description>Recent content in notes on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 18 Mar 2021 01:18:17 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/zh/tag/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>COMP7103 Topic 3 Clustering</title>
      <link>https://www.pseudoyu.com/zh/2021/03/18/comp7103_topic3/</link>
      <pubDate>Thu, 18 Mar 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/03/18/comp7103_topic3/</guid>
      <description>COMP7103 Data Mining Topic 3 Clustering Cluster Analysis Finding groups of objects such that the objects in a group will be similar (or related) to one another and different from (or unrelated to) the objects in other groups
Application  Understanding  Group related documents for browsing, group genes and proteins that have similar functionality, or group stocks with similar price fluctuations   Summarization  Reduce size of large data sets    Types of Clusterings  Partitional Clustering  A division data objects into non-overlapping subsets (clusters) such that each data object is in exactly one subset    Hierarchical clustering  A set of nested clusters organized as a hierarchical tree    Other Distinctions Between Sets of Clusters  Exclusive versus non-exclusive  In non-exclusive clusterings, points may belong to multiple clusters Can represent multiple classes or &amp;lsquo;border&amp;rsquo; points   Fuzzy versus non-fuzzy  In fuzzy clustering, a point belongs to every cluster with some weight between 0 and 1 Weights must sum to 1 Probabilistic clustering has similar characteristics   Partial versus complete  In some cases, we only want to cluster some of the data   Heterogeneous versus homogeneous  Cluster of widely different sizes, shapes, and densities      Well-separated clusters A cluster is a set of points such that any point in a cluster is closer (or more similar) to every other point in the cluster than to any point not in the cluster</description>
    </item>
    
    <item>
      <title>COMP7801 Topic 4 Top-k</title>
      <link>https://www.pseudoyu.com/zh/2021/03/06/comp7801_topic4/</link>
      <pubDate>Sat, 06 Mar 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/03/06/comp7801_topic4/</guid>
      <description>Background Multidimensional Data  Flat relational tables Multimedia feature vectors Data warehouse data Spatial data Text documents  Attribute Types  Attributes of multidimensional tuples may have variable types  Ordinal (e.g., age, salary) Nominal categorical values (e.g., color, religion) Binary (e.g., gender, owns_property)   Basic queries: range, NN, similarity  Basic Queries  (Range) selection query  Returns the records that qualify a (multidimensional) range predicate Example:  Return the employees of age between 45 and 50 and salary above $100,000     Distance (similarity) query  Returns the records that are within a distance from a reference record.</description>
    </item>
    
    <item>
      <title>COMP7801 Topic 3 Spatial Networks</title>
      <link>https://www.pseudoyu.com/zh/2021/02/27/comp7801_topic3/</link>
      <pubDate>Sat, 27 Feb 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/02/27/comp7801_topic3/</guid>
      <description>Background Network Distance  In many real applications accessibility of objects is restricted by a spatial network  Examples  Driver looking for nearest gas station Mobile user looking for nearest restaurant     Shortest path distance used instead of Euclidean distance SP(a,b) = path between a and b with the minimum accumulated length  Challenges  Euclidean distance is no longer relevant  R-tree may not be useful, when search is based on shortest path distance   Graph cannot be flattened to a one-dimensional space  Special storage and indexing techniques for graphs are required   Graph properties may vary  directed vs.</description>
    </item>
    
    <item>
      <title>COMP7103 Topic 2 Association Rules</title>
      <link>https://www.pseudoyu.com/zh/2021/02/25/comp7103_topic2/</link>
      <pubDate>Thu, 25 Feb 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/02/25/comp7103_topic2/</guid>
      <description>COMP7103 Data Mining Topic 2 Association Rules Market-Basket Model A general many-many mapping (association) between two kinds of things
 A large set of items, e.g., things sold in a supermarket A large set of baskets, each of which is a small set of the items, e.g., the things one customer buys on one day  Frequent Itemsets Support Support for itemset I (s(I)) = the number of baskets containing all items in I</description>
    </item>
    
    <item>
      <title>COMP7801 Topic 2 Spatial Data Management</title>
      <link>https://www.pseudoyu.com/zh/2021/02/06/comp7801_topic2/</link>
      <pubDate>Sat, 06 Feb 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/02/06/comp7801_topic2/</guid>
      <description>Spatial Data Management Concepts Spatial Data
 Location data  Check-in service Online Maps Location-based services   Location tracking Traffic Data  Spatial Databases
 PostgreSQL with PostGIS Neo4J-spatial HadoopGIS Ingres GeoMesa  Spatial Data Management
 Spatial Database Systems  Manage large collections of multidimensional objects (2D/3D)   A spatial object  Contains (at least) one spatial attributes that describes its location and/or geometry   A spatial relation  Is an organized collection of spatial objects of the same entity    Spatial Data Representation</description>
    </item>
    
    <item>
      <title>COMP7801 Topic 1b Database Indexing</title>
      <link>https://www.pseudoyu.com/zh/2021/01/30/comp7801_topic1b/</link>
      <pubDate>Sat, 30 Jan 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/30/comp7801_topic1b/</guid>
      <description>Database Indexing Concepts  Indexing mechanisms used to speed up access to desired data Search Key  An attribute or a set of attributes used to look up records in a file   An index file consists of records (called index entries) of the form search key - pointer Index files are typically much smaller than the original file Two basic kinds of indices  Ordered indices: search keys are stored in sorted order Hash indices: search keys are distributed across &amp;ldquo;buckets&amp;rdquo; using a &amp;ldquo;hash function&amp;rdquo;    Good Index  Index quality is evaluated by several factors  Access types supported by the index efficiently  records with a specified value in the attribute (equality query) or records with an attribute value falling in a specified range of values (range query)   Access time – query response time Insertion time – data record insertion time Deletion time – data record deletion time Space overhead – size of the index file    Classification of Indexes  Primary index  In a sequentially ordered file, the index whose search key specifies the sequential order of the file   Secondary index  an index whose search key specifies an order different from the sequential order of the file Also called non-clustered index     Dense index  Index record appears for every search-key value in the file   Sparse Index  Contains index records for only some search-key values Applicable when records are sequentially ordered on search-key Less space and less maintenance overhead for insertions and deletions Generally slower than dense index for locating records Good tradeoff: sparse index with an index entry for every block in file, corresponding to least search-key value in the block    Primary and Secondary Indices  Secondary indices have to be dense Indices offer substantial benefits when searching for records  Index is much smaller than relation file (cheap scan) Index can be ordered (fast search)   When a file is modified, every index on the file must be updated  Updating indices imposes overhead on database modification Indexes should be used with care   Sequential scan using primary index is efficient, but a sequential scan using a secondary index is expensive  Each record access may fetch a new block from disk    Multilevel Index  If index does not fit in memory, access becomes expensive To reduce number of disk accesses to index records, treat 1st level of index kept on disk as a sequential file and construct a sparse index on it  outer index – a sparse index on 1st-level index file inner index – the 1st-level index file   If even outer index is too large to fit in main memory, yet another level of index can be created, and so on  B+-Tree Index Files  A dynamic, multi-level index Advantage  automatically reorganizes itself with small local changes, in the face of insertions and deletions Reorganization of entire file is not required to maintain performance   Disadvantage of B+-trees  Extra insertion and deletion overhead, space overhead   Advantages of B+-trees outweigh disadvantages, and they are used extensively  Basic Properties  Disk-based tree structure  every node of the tree is a block and has an address (block-id) on the disk   Multiway tree  each node has multiple children (between n/2 and n, where n/2 is the order or degree of the tree) Therefore, at least 50% of the space in a node is guaranteed to be occupied (this rule may not apply to tree root)   Balanced tree  all paths from the root to a leaf have the same length guarantees good search performance (to be seen later)   Disjoint partition of attribute domain into ranges  each sub-tree indexes a range in the attribute domain the entries of a directory node define the separators between domain intervals leaf nodes store index entries and pointers to the relation file    Non-Leaf Nodes in B+-Trees  Each non-leaf node contains up to n-1 search key values and up to n pointers All non-leaf nodes (except root) contain at least n/2 pointers (n/2 is sometimes called the minimum fan-out or degree) Non leaf nodes form a multi-level sparse index on the leaf nodes.</description>
    </item>
    
    <item>
      <title>COMP7103 Topic 1 Introduction</title>
      <link>https://www.pseudoyu.com/zh/2021/01/28/comp7103_topic1/</link>
      <pubDate>Thu, 28 Jan 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/28/comp7103_topic1/</guid>
      <description>COMP7103 Data Mining Topic 1 Introduction Decision-Support System (DSS)
 A decision-support system (DSS) is a system that assists decision makers to make important decisions for an organization or business KDD and data mining are important components in many DSS&amp;rsquo;s  Data and Knowledge
 Data  A collecion of facts about certain group of objects   Pattern  Certain characteristics of data that are frequently observed   Knowledge  Some general rules about the objects    Data Warehouse</description>
    </item>
    
    <item>
      <title>COMP7801 Topic 1a Relational Database</title>
      <link>https://www.pseudoyu.com/zh/2021/01/23/comp7801_topic1a/</link>
      <pubDate>Sat, 23 Jan 2021 01:18:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2021/01/23/comp7801_topic1a/</guid>
      <description>Relational Databases Structure of Relational Databases Basic structure  Given sets D1, D2, …. Dn A relation r is a subset of D1 x D2 x … x Dn A relation is a set of n-tuples (a1, a2, …, an) where each ai Di  Example
 if  customer-name = {Jones, Smith, Curry, Lindsay} customer-street = {Main, North, Park} customer-city = {Harrison, Rye, Pittsfield}   Then  r = {(Jones, Main, Harrison), (Smith, North, Rye), (Curry, North, Rye), (Lindsay, Park, Pittsfield)} is a relation over customer-name x customer-street x customer-city    Attribute Types  Each attribute of a relation has a name The set of allowed values for each attribute is called the domain of the attribute  Relation Schema  A1, A2, …, An are attributes R = (A1, A2, …, An ) is a relation schema  E.</description>
    </item>
    
    <item>
      <title>ICOM6045 Topic 1 Cryptography</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/icom6045_topic1/</link>
      <pubDate>Wed, 21 Oct 2020 19:53:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/icom6045_topic1/</guid>
      <description>ICOM6045 Fundamentals of E-Commerce Security Topic 1 Cryptography Definition  Process of transforming information to make it unreadable to anyone except those possessing the key  Purpose  Data confidentiality  Transpositions/Permutations  An encryption in which the letters of the message are rearranged Function  Try to break established patterns   Example  Columnar transposition  Rearrangement of the characters of the plaintext into columns Based on characteristic patterns of pairs of adjacent letters, called digrams Analysis  Compute the letter frequencies  Break the text into columns by compare a block of ciphertext characters against characters successively farther away in the ciphertext.</description>
    </item>
    
    <item>
      <title>ICOM6012 Topic 4 Transport Layer</title>
      <link>https://www.pseudoyu.com/zh/2020/10/20/icom6012_topic4/</link>
      <pubDate>Tue, 20 Oct 2020 09:37:44 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/20/icom6012_topic4/</guid>
      <description>ICOM6012 Internet Infrastructure Technologies Topic 4 Transport Layer Actions Sender  Get application layer message Determine segment header fields values Create segment Pass segment to IP  Receiver  Receive segment from IP Check header values Extract application layer message Demultiplexes message up to application via socket  Services Provide logical communication between processes Run in end system  Send side  Break app messages into segment Pass to network layer   Receive side  Reassembles segments into messages Pass to application layer    Protocols TCP  Features  Point-to-point  One sender, one receiver   Reliable, in-order byte system  No message boundaries   Full duplex data  Bi-directional data flow in same connection MSS: maximum segment size (excluding header)   Cumulative ACKs Pipelining  TCP congestion and flow control set window size   Flow Control  Sender will not overwhelm receiver   Congestion control   Concepts  Segment structure Sequence numbers  Byte stream &amp;ldquo;number&amp;rdquo; of first byte in segment&amp;rsquo;s data   Acknowledgements (ACKs)  Seq # of next byte expected from other side Cumulative ACKs     Procedure  Connection-oriented  Handshaking initializes sender, receiver state before data exchange TCP socket identified by 4-tuple  Source IP Source Port # Dest IP Dest Port #   Server host may support many simultaneous TCP sockets Web servers have different sockets for each connecting client (Non-persistent HTTP will have different socket for each request) Demux  Receiver uses all four values to direct segment to appropriate socket     3-way handshake  Connection setup   Connection management  Handshake  Agree to establish connection Agree on connection parameters     Retransmission Closing a connection   Events  Data received from application  Create segment with seq # (a byte-stream number of first data byte in segment) Start timer if not already running  Think of timer as for oldest unACKed segment Expiration interval: TimeOutInterval     Timeout  Retransmit segment that caused timeout Restart timer   ACK received  Update what is known to ACKed Start timer if there are still unACKed segment     Shortcomings  SYN DoS Attack  Half-open TCP connections consume all the TCP connection resources SYN packet with a spoofed source address      UDP   Features</description>
    </item>
    
    <item>
      <title>ICOM6012 Topic 3 Application Layer</title>
      <link>https://www.pseudoyu.com/zh/2020/10/19/icom6012_topic3/</link>
      <pubDate>Mon, 19 Oct 2020 17:50:44 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/19/icom6012_topic3/</guid>
      <description>ICOM6012 Internet Infrastructure Technologies Topic 3 Application Layer Creating a Network App Run on different end systems Communication over network No need to write for network-core devices Client-Server Architecture (The Centralized Internet) Server Always-on host Permanent IP address Often in data centers (for scaling) Clients Contact, communicate with server May be intermittently connected May have dynamic IP addresses Don&amp;rsquo;t communicate directly with each other Peer-to-Peer (P2P) Architecture No always-on server</description>
    </item>
    
    <item>
      <title>A Look at Tik-Tok</title>
      <link>https://www.pseudoyu.com/zh/2020/10/16/ecom6013_discussion_topic4/</link>
      <pubDate>Fri, 16 Oct 2020 09:19:19 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/16/ecom6013_discussion_topic4/</guid>
      <description>A Look at Tik-Tok Given there are many social media platforms already existing in US, what makes Tik-Tok so successful that it becomes a big enough threat to cause the US Government to act the way it did towards a commercial company (ignore political factors)? Economically, at about 2016, US tech giants such as Facebook or Google mainly focused on long video platform instead of the short video platform. A company called Musical.</description>
    </item>
    
    <item>
      <title>ECOM6013 Topic 8 Blockchain and Cybercurrency</title>
      <link>https://www.pseudoyu.com/zh/2020/10/09/ecom6013_topic8/</link>
      <pubDate>Fri, 09 Oct 2020 11:01:28 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/09/ecom6013_topic8/</guid>
      <description>ECOM6013 E-Commerce Technologies Topic 8 Blockchain and Cybercurrency Form of Money
 Token money  Physical token Value is lost without the token No intermediary is required for spending Requires faith in the issuer (a government or a bank)   Notationary money  Notation/entry in a ledger, passbook, or database Can&amp;rsquo;t be lost Requires an intermediary Requires faith in the maintainer of the ledger   Hybrid money  Requires both a token and a ledger account Can be lost Requires an intermediary Requires faith in the issuer   Virtual money  No token/ledger Can be lost No intermediary required No issuer, no government backing   Digital money  String of bytes (data) stored on a device Value is lost/stolen when devices fail/invaded   Cybercurrency  Bitcoin is the most influential one Based on blockchain    Bitcoin</description>
    </item>
    
    <item>
      <title>ICOM6012 Topic 2 The Big Picture</title>
      <link>https://www.pseudoyu.com/zh/2020/10/05/icom6012_topic2/</link>
      <pubDate>Mon, 05 Oct 2020 09:06:09 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/05/icom6012_topic2/</guid>
      <description>ICOM6012 Internet Infrastructure Technologies Topic 2 The Big Picture The Internet: &amp;ldquo;nuts and bolts&amp;rdquo; view
 Billions of connected computing devices  Host = end system Running network apps Internet of things (IoT)   Packet switches  routers switchers   Communication links  Fiber, copper, radio, satellite Transmission rate: bandwidth   Networks  Collection of devices, routers, switches, links Managed by an organization   Internet: &amp;ldquo;network of networks&amp;rdquo;  Interconnected ISPs   Protocols  Control sending, receiving of messages   Internet standards  RFC: Requests for Comments IETF: Internet Engineering Task Force IEEE: Institute of Electronical &amp;amp; Electronic Engineering    The Internet: a &amp;ldquo;service&amp;rdquo; view</description>
    </item>
    
    <item>
      <title>COMP7404 Topic 3 Adversarial Search</title>
      <link>https://www.pseudoyu.com/zh/2020/10/05/comp7404_topic3/</link>
      <pubDate>Mon, 05 Oct 2020 00:30:11 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/05/comp7404_topic3/</guid>
      <description>COMP7404 Computational Intelligence and Machine Learning Topic 3 Adversarial Search A Multi-agent Competitive Environment
 Other agents are planning against us Goals are in conflict (not necessarily)  Game Definition
 A game can be defined as  s : States s0: Initial state Player(s) : Defines which player has the move Actions(s) : Returns a set of legal moves Result(s,a) : Defines the result of a move TerminalTest(s) : True when game is over, false otherwise Utility(s,p) : Defines the final numeric value for a game that ends in terminal state s for player p   A game tree can be constructed  Nodes are game states and edges are moves    Tic-Tac-Toe Game Tree</description>
    </item>
    
    <item>
      <title>COMP7404 Topic 2 Beyond Classical Search</title>
      <link>https://www.pseudoyu.com/zh/2020/10/04/comp7404_topic2/</link>
      <pubDate>Sun, 04 Oct 2020 21:30:11 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/04/comp7404_topic2/</guid>
      <description>COMP7404 Computational Intelligence and Machine Learning Topic 2 Beyond Classical Search Planning vs Identification
 Planing: sequence of actions  The path to the goal is the important thing Paths have various costs, depths Heuristics to guide, frontier to keep backups   Identification: assignments to variables  The goal itself is important, not the path    Local Search can find solutions faster for specific types of identification problems</description>
    </item>
    
    <item>
      <title>Mobile Payment Systems Case Study</title>
      <link>https://www.pseudoyu.com/zh/2020/10/01/ecom6013_discussion_topic3/</link>
      <pubDate>Thu, 01 Oct 2020 22:25:19 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/01/ecom6013_discussion_topic3/</guid>
      <description>Mobile Payment Systems Why has China been an ideal environment to support mobile payment systems? Politically, payment licenses are controlled by government (relative financial institutions) and under strict regulation. So, tech giants like Alibaba who are qualified can increasingly develop their payment business in the early age. Plus, in the early stage of mobile payment, laws and rules are not so completed. Payment platform can utilize smart market strategies (like very high return rate) to attract more new potential users and enhance existing users’ engagement, which is effective in market expanding stage.</description>
    </item>
    
    <item>
      <title>ECOM6013 Topic 7 E-Payment Systems</title>
      <link>https://www.pseudoyu.com/zh/2020/09/27/ecom6013_topic7/</link>
      <pubDate>Sun, 27 Sep 2020 11:30:28 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/09/27/ecom6013_topic7/</guid>
      <description>ECOM6013 E-Commerce Technologies Topic 7 E-Payment Systems Payment System Stakeholders&#39; Priorities
 Customer  Low-risk Low-cost Refutable Convenience Reliable   Merchants  Low-risks Low-cost Irrefutable Secure Reliable   Financial intermediaries  Secure Low-risk Maximizing profit   Government regulators  Secure Trust Protecting participants and enforcing reporting    Type of Payment Systems
 Cash Cheque transfer Credit card Stored value Accumulating balance  B2C Payment System</description>
    </item>
    
    <item>
      <title>ECOM6013 Topic 6 E-Commerce Security</title>
      <link>https://www.pseudoyu.com/zh/2020/09/26/ecom6013_topic6/</link>
      <pubDate>Sat, 26 Sep 2020 15:46:28 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/09/26/ecom6013_topic6/</guid>
      <description>ECOM6013 E-Commerce Technologies Topic 6 E-Commerce Security Good E-Commerce Security
 Highest degree of security  New technologies Organizational policies and procedures Industry standards and government law   Other factors  Cost of security vs. potential loss Security often breaks at weakest link    The Tense Between Security and Other Values
 Security vs. Easy of use  More Secure -&amp;gt; More difficult to use + slower   Security vs.</description>
    </item>
    
    <item>
      <title>ECOM6013 Topic 5 Mobile Commerce</title>
      <link>https://www.pseudoyu.com/zh/2020/09/21/ecom6013_topic5/</link>
      <pubDate>Mon, 21 Sep 2020 10:44:28 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/09/21/ecom6013_topic5/</guid>
      <description>ECOM6013 E-Commerce Technologies Topic 5 Mobile Commerce Basic Principle of Mobile Technology
 FDMA (Frequency Division Multiple Access) TDMA (Time Division Multiple Access) CDMA (Code Division Multiple Access)  Fundamental Mobility: Cellphones
Cell Handover
4G vs. 5G
 4G  10 ms 100 Thousand Connections / km^2 1 Gbps   5G  &amp;lt; 1ms 1 Million Connections / km^2 20 Gbps    E-Commerce vs. M-Commerce
 E-Commerce  Device: PC Network: Internet (HTTP)   M-Commerce  Device: Mobile devices Network  Mobile carrier network WiFi Local frequency (RFID/NFC)      Definition of M-Commerce</description>
    </item>
    
  </channel>
</rss>
