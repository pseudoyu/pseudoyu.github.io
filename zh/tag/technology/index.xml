<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>technology on Pseudoyu</title>
    <link>https://www.pseudoyu.com/zh/tag/technology/</link>
    <description>Recent content in technology on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 16 Nov 2020 20:27:17 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/zh/tag/technology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java IO</title>
      <link>https://www.pseudoyu.com/zh/2020/11/16/java-io/</link>
      <pubDate>Mon, 16 Nov 2020 20:27:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/16/java-io/</guid>
      <description>Java Basics File and I/O I/O流类型 流向 输入流 输出流 操作单元 字节流 字符流 角色 节点流 处理流 操作方式 Reader - 字符读取 节点流 FileReader PipedReader CharArrayReader 处理流 BufferedReader InputStreamReader Writer - 字符写出 节点流 FileWriter PipedWriter CharArrayWriter</description>
    </item>
    
    <item>
      <title>Java Threading</title>
      <link>https://www.pseudoyu.com/zh/2020/11/16/java-threading/</link>
      <pubDate>Mon, 16 Nov 2020 20:20:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/16/java-threading/</guid>
      <description>Java Basics 线程 (Threading) 程序 含有指令和数据的文件 静态代码 进程 系统运行程序的基本单位 程序的一次执行过程 动态过程 线程 比进程更小的执行单位 轻量级进程 同类多个线程</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Thoughts</title>
      <link>https://www.pseudoyu.com/zh/2020/11/10/blockchain-ethereum-thoughts/</link>
      <pubDate>Tue, 10 Nov 2020 11:30:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/10/blockchain-ethereum-thoughts/</guid>
      <description>Blockchain Technology and Applications Blockchain Ethereum Thoughts  ERC20  Ethereum Request For Comments   Smart contract  Smart contract is anything but smart Just automated contract For control logic   Irrevocability  Double edged sword  Hard to fix the bug Can not stop the smart contract   Nothing is irrevocability   Solidity  Formal verification Template   Open source  Security  &amp;ldquo;Many eyeball fallacy&amp;rdquo;   Credibility   Decentralization  Can be changed Should in decentralized way (voting) Not equals to distributed   Fork  Democracy   State machine  Mission critical application  Air traffic control Stock exchange Space shuttle      Cases  DAO  Decentralized Autonomous Organization Example: TheDAO  No withdraw function splitDAO  7-day for debate 28-day for lock   childDAO Attacker  $50,000,000/$150,000,000 Too big to fail       DAC  Decentralized Autonomous Corporation   Beauty Chain  SafeMath  Overflow      </description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Smart Contract</title>
      <link>https://www.pseudoyu.com/zh/2020/11/07/blockchain-ethereum-smart-contract/</link>
      <pubDate>Sat, 07 Nov 2020 00:09:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/07/blockchain-ethereum-smart-contract/</guid>
      <description>Blockchain Technology and Applications Ethereum Smart Contract 定义 运行在区块链上的一段代码 代码逻辑定义了合约的内容 智能合约账户保存了合约的当前运行状态 余额 交易次数 合约代码 存储, MPT 不支持多线</description>
    </item>
    
    <item>
      <title>Blockchain Proof of Stake</title>
      <link>https://www.pseudoyu.com/zh/2020/11/05/blockchain-proof-of-stake/</link>
      <pubDate>Thu, 05 Nov 2020 09:25:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/05/blockchain-proof-of-stake/</guid>
      <description>Blockchain Technology and Applications Proof of Stake 本质 Virtual mining 作用 省去了挖矿过程 节约能耗 提升抗攻击能力 AltCoin Infanticide 问题 Nothing at stake 机制不够成熟 Bug bounty Ethereum Casper Friendly Finality Gadget (FFG) Validator Epoch 推动系统达成共识 (Two-phase commit) Prepare message 2/3 Commit message 2/3</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Difficulty</title>
      <link>https://www.pseudoyu.com/zh/2020/11/04/blockchain-ethereum-difficulty/</link>
      <pubDate>Wed, 04 Nov 2020 22:10:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/04/blockchain-ethereum-difficulty/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) 难度调整 发展阶段 Frontier Homestead Metropolis Byzantium (拜占庭) Constantinople Serenity 难度D(H) D(0) - 131072 基础部分 难度炸弹 为了向PoS迁移，降低分叉风险 实际：迁移进度慢，但是</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Mining Algorithm</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-mining-algorithm/</link>
      <pubDate>Tue, 03 Nov 2020 10:30:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-mining-algorithm/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) Mining Algorithm Compared to LiteCoin Scrypt Hard for light node to verify 128K 2 minutes and a half Trend ASIC resistance Memory hard Design 2 datasets 16M cache For verification 1G dataset -&amp;gt; 2.5G now Generate Read 256 times of cache Put into a large list Solve Read 128 times of large list Neighboring 64 * 2 Ethash 1G Memory + 16M</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum GHOST Protocol</title>
      <link>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-ghost-protocol/</link>
      <pubDate>Tue, 03 Nov 2020 09:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/03/blockchain-ethereum-ghost-protocol/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) GHOST Protocol  Problem  Less confirmation time Temporary fork Mining centralization (Centralization bias)   Uncle block  Only first blcok after forking Same ancestor Within 7 generation Decreasing Block reward  7/8 for branch -&amp;gt; 6/8 -&amp;gt; 5/8 -&amp;gt; &amp;hellip; -&amp;gt; 2/8 1/32 for main (fixed)   No gas fee Main blocks don&amp;rsquo;t check or execute the uncle block transaction    </description>
    </item>
    
    <item>
      <title>Java Methods</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/java-methods/</link>
      <pubDate>Mon, 02 Nov 2020 14:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/java-methods/</guid>
      <description>Java Basics Java 方法 (Methods) Java程序设计语言总是采用按值调用 // Example public class methodTest { public static void main(String[] args) { // TODO Auto-generated method stub Student s1 = new Student(&amp;#34;Misty&amp;#34;); Student s2 = new Student(&amp;#34;Marshal&amp;#34;); Test.swap(s1, s2); System.out.println(&amp;#34;s1:&amp;#34; + s1.getName()); System.out.println(&amp;#34;s2:&amp;#34; + s2.getName()); } public static void swap(Student x, Student y) { Student temp</description>
    </item>
    
    <item>
      <title>Java equals Method</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/java-equals-method/</link>
      <pubDate>Mon, 02 Nov 2020 13:00:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/java-equals-method/</guid>
      <description>Java Basics Java equals Method equals() Features Equivalence relationship x.euqal(x); Compared to self x.equals(y) == y.equals(x); When conversed, also true if (x.equals(y) &amp;amp;&amp;amp; y.equals(z)) x.equals(z); When transited, also true x.equals(y) == x.equals(y); When repeated, always true x.equals(null) == false; When compared to null, always false (when x is not assigned null) About == For primitive data type, == measures the equivalence (there is no equals()) For reference, == measures whether</description>
    </item>
    
    <item>
      <title>Java Generics</title>
      <link>https://www.pseudoyu.com/zh/2020/11/02/java-generics/</link>
      <pubDate>Mon, 02 Nov 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/02/java-generics/</guid>
      <description>Java Basics 泛型 (Generics) 定义 提供编译时类型安全检测机制 参数化类型 Java泛型 伪泛型（类型擦除） 使用方式 泛型类 // 定义泛型类 public class Generic&amp;lt;T&amp;gt; { private T key; public class Generic(T key) { this.key = key; } public</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Transaction tree and Receipt tree</title>
      <link>https://www.pseudoyu.com/zh/2020/10/31/blockchain-ethereum-transaction-tree-and-receipt-tree/</link>
      <pubDate>Sat, 31 Oct 2020 19:36:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/31/blockchain-ethereum-transaction-tree-and-receipt-tree/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) Transaction tree and Receipt tree  Merkle proof Bloom filter  Search whether an element is in a collection Filter useless blocks False postive No false negative Can&amp;rsquo;t do delete operation   Transaction-driven state machine  </description>
    </item>
    
    <item>
      <title>Blockchain Ethereum State tree</title>
      <link>https://www.pseudoyu.com/zh/2020/10/30/blockchain-ethereum-state-tree/</link>
      <pubDate>Fri, 30 Oct 2020 10:21:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/30/blockchain-ethereum-state-tree/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) State tree  addr -&amp;gt; state  Hash  Construct merkle tree cost too much   Unsorted merkle tree  No search and update method   Sorted merkle tree  Cost too much when inserting     (Key, Value)  RLP (Recursive Length Prefix)  Nested array of bytes   Compared: protocol buffer (protocolbuf)   Trie (Retrieval)  Pros  Branching factor Efficiency of trie depends on the length of key Avoid collision resistence Fixed input -&amp;gt; fixed output Update operation locally   Cons  Storage cost     Patricia tree (trie)  Compact the path, less memory cost When the distribution is sparse   Merkle Patricia Tree  Pointer -&amp;gt; Hash pointer  Merkle tree vs.</description>
    </item>
    
    <item>
      <title>Blockchain Ethereum Features</title>
      <link>https://www.pseudoyu.com/zh/2020/10/29/blockchain-ethereum-features/</link>
      <pubDate>Thu, 29 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/29/blockchain-ethereum-features/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) Feature  Memory hard Mining puzzle ASIC resistance  Account  Threats  Double spending attack Replay attack  Solution: add a nonce to count tx     Type  Externally owned account  Balance Nonce (sequence number)   Smart contract account (can&amp;rsquo;t start a transaction)  Balance Nonce Code Storge      PoW -&amp;gt; PoS Smart contract (decentralized contract) </description>
    </item>
    
    <item>
      <title>Blockchain BitCoin Questions</title>
      <link>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-questions/</link>
      <pubDate>Wed, 28 Oct 2020 14:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-questions/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Additional questions  Q: In a transaction, the receiver is not connected to the bitcoin network.  A: No need online, just records   Q: Lost private key  A: No solution Exchanges: Mt. Gox   Q: Wrong address  A: No solution   Q: OP_RETURN, return mistake, why it&amp;rsquo;s still executed?  A: OP_RETURN is in the output, so it will be verified in the next TX   Q: How to judge who find the nonce first?</description>
    </item>
    
    <item>
      <title>Blockchain BitCoin Anonymity</title>
      <link>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-anonymity/</link>
      <pubDate>Wed, 28 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-anonymity/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Anonymity  Pseudonymity Threats  Address generation  Analyze tx Analyze wallets (if used)   Connection to real identity  KYC (Know Your Customer)     Bad use  Silk road (eBay for illegal drugs)   Tips  TOR browser Coin mixing   Zero-knowledge proof  Signature (public key - private key)   Possible solution  Sacrifice  Performance Not absolutely secure   Zerocoin  Base coin Zero coin   Zerocash    </description>
    </item>
    
    <item>
      <title>Blockchain BitCoin Scripts</title>
      <link>https://www.pseudoyu.com/zh/2020/10/24/blockchain-bitcoin-scripts/</link>
      <pubDate>Sat, 24 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/24/blockchain-bitcoin-scripts/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Scripts (stack based language)  TX structure  txid hash version (of bitcoin) size locktime (take effect time) vin  txid vout scriptSig (input script)  asm hex     vout  value n scriptPubKey (output script) value   blockhash confirmations time (tx time) blocktime   Transaction  P2PK (Pay to Public Key)  input script  PUSHDATA (Sig) (signed by provate key)   output script  PUSHDATA (PubKey) CHECKSIG     P2PKH (Pay to Public Key Hash)  input script  PUSHDATA (Sig) (signed by provate key) PUSHDATA (PubKey)   output script  DUP (duplicate a PubKey) HASH160 (calculate the PubKey&amp;rsquo;s hash) PUSHDATA (PubKeyHash) EQUALVERIFY CHECKSIG     P2SH (Pay to Script Hash)  redeemScript  PUSHDATA (PubKey) CHECKSIG   input script  PUSHDATA (Sig) PUSHDATA (serialized redeemScript)   output script  HASH160 PUSHDATA (redeemScriptHash) EQUAL     Proof of Burn  Destroy bitcoin      </description>
    </item>
    
    <item>
      <title>Blockchain BitCoin Fork</title>
      <link>https://www.pseudoyu.com/zh/2020/10/23/blockchain-bitcoin-fork/</link>
      <pubDate>Fri, 23 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/23/blockchain-bitcoin-fork/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Fork  State fork  Forking attack (deliberate fork)   Protocol fork  Hard fork (permanent)  Block size limit (1M -&amp;gt; 4M)   Soft fork (&amp;gt; 50%, temporary)  Block size limit (1M -&amp;gt; 0.5M) coinbase  As extra nonce 2^32 -&amp;gt; 2^96 (adding 8 bytes) As root hash of UTXO   P2SH(Pay to Script Hash)      </description>
    </item>
    
    <item>
      <title>Java Throwable</title>
      <link>https://www.pseudoyu.com/zh/2020/10/22/java-throwable/</link>
      <pubDate>Thu, 22 Oct 2020 10:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/22/java-throwable/</guid>
      <description>Java Basics Throwable Error (JVM can&amp;rsquo;t handle with)
 VirtualMachineError  StackOverFlowError OutOfMemoryError   AWTError  Exception (Can be deal with by program)
 IOException  EOFException FileNotFoundException   RuntimeException  ArrithmeticException MissingResourceException ClassNotFoundException NullPointerException IllegalArgumentException ArrayIndexOutOfBoundsException UnknownTypeException    Basic syntax  try-catch throw throws finally  </description>
    </item>
    
    <item>
      <title>Java Inheritance</title>
      <link>https://www.pseudoyu.com/zh/2020/10/22/java-inheritance/</link>
      <pubDate>Thu, 22 Oct 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/22/java-inheritance/</guid>
      <description>Java Basics Inheritance Access  Modifiers  protected  Visible to child class   private public   Encapsulation  Using API to communicate Class or members can be least accessed by external   Child class rewrites the parent class  Methods in child class must have higher access level   Field can&amp;rsquo;t be public  getter setter    Abstract class and Interface  Abstract class  abstract keyword  abstract method -&amp;gt; abstract class   Can&amp;rsquo;t be instanced Can be inherited   Interface  public field  static final   Members(field and method)  public     Difference  Abstract class provide a IS-A relationship while Interface provides a LIKE-A relationship One class can applied several interfaces but can&amp;rsquo;t inherit more than one abstract class Fields of interface must be static/final but abstract class has no restriction Members of interface must be public but abstract class have multiple accesses   Choose  Interface (higher priority)  Irrelevant classes need to realize the same method need to use multiple inheritance   Abstract class  Relevant classes need to share same code block Need to control members&#39; access Need to inherit non-static or no-constant field      Super  Access parent classes&#39; constructor Access members of parent classes  Method priority  this.</description>
    </item>
    
  </channel>
</rss>
