<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Pseudoyu</title>
    <link>https://www.pseudoyu.com/zh/category/programming/</link>
    <description>Recent content in Programming on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 13 Dec 2020 03:12:17 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/zh/category/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blockchain学习 - 比特币</title>
      <link>https://www.pseudoyu.com/zh/2020/12/13/blockchain_note_bitcoin/</link>
      <pubDate>Sun, 13 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/13/blockchain_note_bitcoin/</guid>
      <description>比特币的数据结构 哈希指针 Hash Pointers 哈希指针指向一个结构体的哈希值（整个区块+其H()一起算出下一个值） 特征 tamper-evident log 如果这个区块被篡改，则会影响后续所有</description>
    </item>
    
    <item>
      <title>Blockchain学习 - 区块链框架</title>
      <link>https://www.pseudoyu.com/zh/2020/12/12/blockchain_note_framework/</link>
      <pubDate>Sat, 12 Dec 2020 08:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/12/blockchain_note_framework/</guid>
      <description>区块链框架 交易 钱包 签名 内存池 网络 共识机制 哈希 区块 区块链 哈希 区块链使用的是SHA256(Secure Hashing Algorithm 256 bits) var SHA256 = require(&amp;#34;crypto-js/sha256&amp;#34;); const data1 = &amp;#34;Blockchain Rock!&amp;#34;; const dataObject = { id: 1, body: &amp;#34;With</description>
    </item>
    
    <item>
      <title>Blockchain学习 - 区块链概念</title>
      <link>https://www.pseudoyu.com/zh/2020/12/12/blockchain_note_concept/</link>
      <pubDate>Sat, 12 Dec 2020 05:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/12/blockchain_note_concept/</guid>
      <description>区块链概念 传统数据库 vs. 区块链数据库 传统数据库 网络 中心化 功能 Create 创建 Read 读取 Update 更新 Delete 删除 可变性 可变 权限 中心化 透明度 低 区块链数据库 网络 去中心化 给予节</description>
    </item>
    
    <item>
      <title>Blockchain学习 - 密码学原理</title>
      <link>https://www.pseudoyu.com/zh/2020/12/12/blockchain_note_cryptography/</link>
      <pubDate>Sat, 12 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/12/blockchain_note_cryptography/</guid>
      <description>密码学原理 哈希 重要特征 collision resistance 抗碰撞性 哈希碰撞是指当x≠y时，存在H(x)=H(y)，不同的输入映射到哈希表的同一个位置 很难人工创造哈希碰撞 常用</description>
    </item>
    
    <item>
      <title>Java学习 - 线程状态及转化方法</title>
      <link>https://www.pseudoyu.com/zh/2020/12/09/java_note_concurrent_state/</link>
      <pubDate>Wed, 09 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/09/java_note_concurrent_state/</guid>
      <description>线程状态及转化方法 操作系统中的线程状态转换 操作系统线程主要有以下三个状态 就绪状态 READY：线程正在等待使用CPU，经调度程序调用之后可进入</description>
    </item>
    
    <item>
      <title>Java学习 - 线程组和线程优先级</title>
      <link>https://www.pseudoyu.com/zh/2020/12/07/java_note_concurrent_threadgroup/</link>
      <pubDate>Mon, 07 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/07/java_note_concurrent_threadgroup/</guid>
      <description>线程组和线程优先级 线程组 Java中的ThreadGroup表示线程组，可使用线程组对线程进行批量控制；每个线程必须存在于一个线程组中，不能独</description>
    </item>
    
    <item>
      <title>Java学习 - 多线程入门类和接口</title>
      <link>https://www.pseudoyu.com/zh/2020/12/05/java_note_concurrent_practice/</link>
      <pubDate>Sat, 05 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/05/java_note_concurrent_practice/</guid>
      <description>多线程入门类和接口 Java中使用多线程的方法 由于Java单继承多实现的特性，Runnable接口用起来比Thread更灵活 Runnable接</description>
    </item>
    
    <item>
      <title>Java学习 - 文件与I/O流</title>
      <link>https://www.pseudoyu.com/zh/2020/12/02/java_note_io/</link>
      <pubDate>Wed, 02 Dec 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/12/02/java_note_io/</guid>
      <description>IO流 分类 流的流向 输入流 输出流 操作单元 字节流 字符流 角色 节点流 处理流 抽象类基类 InputStream（字节流）/Reader（字符流） Outp</description>
    </item>
    
    <item>
      <title>Java学习 - 多线程</title>
      <link>https://www.pseudoyu.com/zh/2020/11/29/java_note_concurrent/</link>
      <pubDate>Sun, 29 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/29/java_note_concurrent/</guid>
      <description>多线程 线程、程序、进程的基本概念 线程 比进程更小的执行单位，一个进程在执行的过程中可以产生多个线程 同类的多个线程共享同一块内存空间和一组系统资</description>
    </item>
    
    <item>
      <title>Java学习 - 常用方法</title>
      <link>https://www.pseudoyu.com/zh/2020/11/27/java_note_methods/</link>
      <pubDate>Fri, 27 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/27/java_note_methods/</guid>
      <description>String与StringBuffer String 特征 Java8中，String内部使用char数组存储数据 Java9后，String类的实现改用了b</description>
    </item>
    
    <item>
      <title>Java学习 - 集合</title>
      <link>https://www.pseudoyu.com/zh/2020/11/25/java_note_collections/</link>
      <pubDate>Wed, 25 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/25/java_note_collections/</guid>
      <description>集合类 概述 为了在程序中保存数目不确定的对象，JDK中提供了一系列特殊的类，这些类可以存储任意类型的对象且长度可变，称为集合，位于java.u</description>
    </item>
    
    <item>
      <title>Java学习 - 面向对象</title>
      <link>https://www.pseudoyu.com/zh/2020/11/23/java_note_oop/</link>
      <pubDate>Mon, 23 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/23/java_note_oop/</guid>
      <description>Java面向对象 特性 封装性：将对象的属性和行为封装起来，不需要让外界知道具体的实现细节 继承性：无需重新编写原有类的情况下，新类可拥有原有类的</description>
    </item>
    
    <item>
      <title>Java学习 - 基础</title>
      <link>https://www.pseudoyu.com/zh/2020/11/20/java_note_basic/</link>
      <pubDate>Fri, 20 Nov 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/11/20/java_note_basic/</guid>
      <description>Java基础 Java特性 简单性 丢弃了C++中运算符重载、多重继承等 不使用指针而是使用引用 自动垃圾回收机制（不用开发者进行内存管理） 面向对象 提</description>
    </item>
    
  </channel>
</rss>
