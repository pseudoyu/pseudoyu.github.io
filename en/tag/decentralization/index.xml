<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>decentralization on Pseudoyu</title>
    <link>https://www.pseudoyu.com/en/tag/decentralization/</link>
    <description>Recent content in decentralization on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 29 Oct 2020 09:07:17 +0800</lastBuildDate>
    
	<atom:link href="https://www.pseudoyu.com/en/tag/decentralization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blockchain Ethereum Features</title>
      <link>https://www.pseudoyu.com/en/2020/10/29/blockchain-ethereum-features/</link>
      <pubDate>Thu, 29 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/29/blockchain-ethereum-features/</guid>
      <description>Blockchain Technology and Applications Ethereum System (Account-based ledger) Feature  Memory hard Mining puzzle ASIC resistance  Account  Threats  Double spending attack Replay attack  Solution: add a nonce to count tx     Type  Externally owned account  Balance Nonce (sequence number)   Smart contract account (can&amp;rsquo;t start a transaction)  Balance Nonce Code Storge      PoW -&amp;gt; PoS Smart contract (decentralized contract) </description>
    </item>
    
    <item>
      <title>Blockchain Questions</title>
      <link>https://www.pseudoyu.com/en/2020/10/28/blockchain-questions/</link>
      <pubDate>Wed, 28 Oct 2020 14:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/28/blockchain-questions/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Additional questions  Q: In a transaction, the receiver is not connected to the bitcoin network.  A: No need online, just records   Q: Lost private key  A: No solution Exchanges: Mt. Gox   Q: Wrong address  A: No solution   Q: OP_RETURN, return mistake, why it&amp;rsquo;s still executed?  A: OP_RETURN is in the output, so it will be verified in the next TX   Q: How to judge who find the nonce first?</description>
    </item>
    
    <item>
      <title>Blockchain Anonymity</title>
      <link>https://www.pseudoyu.com/en/2020/10/28/blockchain-anonymity/</link>
      <pubDate>Wed, 28 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/28/blockchain-anonymity/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Anonymity  Pseudonymity Threats  Address generation  Analyze tx Analyze wallets (if used)   Connection to real identity  KYC (Know Your Customer)     Bad use  Silk road (eBay for illegal drugs)   Tips  TOR browser Coin mixing   Zero-knowledge proof  Signature (public key - private key)   Possible solution  Sacrifice  Performance Not absolutely secure   Zerocoin  Base coin Zero coin   Zerocash    </description>
    </item>
    
    <item>
      <title>Blockchain Scripts</title>
      <link>https://www.pseudoyu.com/en/2020/10/24/blockchain-scripts/</link>
      <pubDate>Sat, 24 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/24/blockchain-scripts/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Scripts (stack based language)  TX structure  txid hash version (of bitcoin) size locktime (take effect time) vin  txid vout scriptSig (input script)  asm hex     vout  value n scriptPubKey (output script) value   blockhash confirmations time (tx time) blocktime   Transaction  P2PK (Pay to Public Key)  input script  PUSHDATA (Sig) (signed by provate key)   output script  PUSHDATA (PubKey) CHECKSIG     P2PKH (Pay to Public Key Hash)  input script  PUSHDATA (Sig) (signed by provate key) PUSHDATA (PubKey)   output script  DUP (duplicate a PubKey) HASH160 (calculate the PubKey&amp;rsquo;s hash) PUSHDATA (PubKeyHash) EQUALVERIFY CHECKSIG     P2SH (Pay to Script Hash)  redeemScript  PUSHDATA (PubKey) CHECKSIG   input script  PUSHDATA (Sig) PUSHDATA (serialized redeemScript)   output script  HASH160 PUSHDATA (redeemScriptHash) EQUAL     Proof of Burn  Destroy bitcoin      </description>
    </item>
    
    <item>
      <title>Blockchain Fork</title>
      <link>https://www.pseudoyu.com/en/2020/10/23/blockchain-fork/</link>
      <pubDate>Fri, 23 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/23/blockchain-fork/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Fork  State fork  Forking attack (deliberate fork)   Protocol fork  Hard fork (permanent)  Block size limit (1M -&amp;gt; 4M)   Soft fork (&amp;gt; 50%, temporary)  Block size limit (1M -&amp;gt; 0.5M) coinbase  As extra nonce 2^32 -&amp;gt; 2^96 (adding 8 bytes) As root hash of UTXO   P2SH(Pay to Script Hash)      </description>
    </item>
    
    <item>
      <title>Blockchain Mining</title>
      <link>https://www.pseudoyu.com/en/2020/10/22/blockchain-mining/</link>
      <pubDate>Thu, 22 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/22/blockchain-mining/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) Mining  Solve puzzles  Average block time  10 minutes   Difficulty  Target = target * (actual time / expected time) Adjust every 2 weeks Ar most 4 times, at least 1/4     Bernoulli process (nearly poisson process in BitCoin mining)  Bernoulli trial  A random experiment with binary outcome   A sequence of independent Bernoulli trial   Feature  Memoryless Progress free  Ensure the fairness of mining   Exponential distribution   Device (Universal -&amp;gt; Specific)  CPU GPU ASIC (Application Specific Integrated Circuit)) Mining pool (on demand mining)  Pool manager (risks of 51% attack) miners      </description>
    </item>
    
    <item>
      <title>Blockchain Protocol</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/blockchain-protocol/</link>
      <pubDate>Wed, 21 Oct 2020 12:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/blockchain-protocol/</guid>
      <description>Blockchain Technology and Applications Protocol Distributed consensus  &amp;ldquo;Impossibility result&amp;rdquo;  FLP  In an asynchronous system, if one faulty exists, there is no consensus   CAP Theorem  Consistency Availability Partition tolerance     Example  Distributed hash table    Consensus in BitCoin  Membership (decide who can vote)  Hyperledger  Fabric     Vote by computing power (based on puzzle friendly) Increasing concern  Win  Longest valid chain   Lose  Orphan block      </description>
    </item>
    
    <item>
      <title>Blockchain Data Structure</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/blockchain-data-structure/</link>
      <pubDate>Wed, 21 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/blockchain-data-structure/</guid>
      <description>Blockchain Technology and Applications Data Structure Hash pointer (blockchain is a linked list using hash pointers)
 Genesis block &amp;lt;- block1 &amp;lt;- block2 &amp;lt;-&amp;hellip;&amp;lt;- recent block (every block has a hash pointer) Tamper-event log  Merkle tree (using hash pointer instead of pointer)  Merkle proof (proof of membership/inclusion)  O(log(n))   Think: proof of non-membership  O(n) Sorted merkle tree: O(log(n))    Application (blockchain)  Node  Full node (fully validating node)  Block header  Version Hash of previous block header Merkle root hash (protect all nodes) Target Nonce   Block body  Transaction lists     Light node (light weight node)  Only store block headers     Problem  Double spending    </description>
    </item>
    
    <item>
      <title>Blockchain Cryptography</title>
      <link>https://www.pseudoyu.com/en/2020/10/21/blockchain-cryptography/</link>
      <pubDate>Wed, 21 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/21/blockchain-cryptography/</guid>
      <description>Blockchain Technology and Applications Cryptography Cryptographic hash function  Application  Digital commitment (digital equivalent of a sealed envelop)  H(x || nonce)   SHA-256 (used in bitcoin)   Features  Collision resistance  x != y, H(x) = H(y) MD5 (proved bad)   Hiding  x -&amp;gt; H(x), H(x) !-&amp;gt; x   Puzzle friendly  H(block header) &amp;lt;= target Keep trying nonce, no shortcuts Difficult to solve, but easy to verify Application  PoW (Proof of Work)        Encryption  Symmetric encryption  Use the same one key Not secure to transport encryption key   Asymmetric encryption (public key encryption)  Use two keys (one for encryption, another for decryption) A good source of randomness (assume) Application  Signature (used in bitcoin)      </description>
    </item>
    
    <item>
      <title>Blockchain Bitcoin Features</title>
      <link>https://www.pseudoyu.com/en/2020/10/19/blockchain-bitcoin-features/</link>
      <pubDate>Mon, 19 Oct 2020 20:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/10/19/blockchain-bitcoin-features/</guid>
      <description>Blockchain Technology and Applications BitCoin System (Transaction-based ledger) UTXO (Unspent Transaction Output)  Total inputs = total outputs  Quantity  21,000,000  Block reward  Coinbase transaction Cut half every 4 year  Transaction fee BitCoin network  Structure  Application layer  BitCoin blockchain   Network layer  P2P overlay network     Node  Seed node   Feature  Simple Robust Not efficient &amp;ldquo;Best effort&amp;rdquo;   Message transport  Flooding    Security  Problem  Sybil attack Forking attack Boycott Selfish mining  Reduce competition     Solution  Based on computing power (large cost) Require 6 confirmation by nodes (long time, about 1 hour)    </description>
    </item>
    
    <item>
      <title>Introduction to Crypto and Cryptocurrencies</title>
      <link>https://www.pseudoyu.com/en/2020/09/23/introduction-to-crypto-and-cryptocurrencies/</link>
      <pubDate>Wed, 23 Sep 2020 03:12:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/en/2020/09/23/introduction-to-crypto-and-cryptocurrencies/</guid>
      <description>Bitcoin and Cryptocurrency Technologies Lecture 1 Introduction to Crypto and Cryptocurrencies Hash Function
 Takes any string as input Fixed-size output Efficiently computable  Security Properties
 Collision-free  Nobody can find x and y such as &amp;ldquo;x!=y and H(x)=H(y)&amp;quot;   Hiding  Given H(x), it&amp;rsquo;s infeasible to find x   Puzzle-friendly  For every possible output value y, if k is chosen from a distribution with high min-entropy, then it&amp;rsquo;s infeasible to find x such as H(k|x)=y    SHA-256 Hash Function</description>
    </item>
    
  </channel>
</rss>