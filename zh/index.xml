<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0">
  <channel>
    <title>Pseudoyu</title>
    <link>https://www.pseudoyu.com/zh/</link>
    <description>Recent content on Pseudoyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 29 Oct 2020 09:07:17 +0800</lastBuildDate>
    
    <atom:link href="https://www.pseudoyu.com/zh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://www.pseudoyu.com/zh/about/</link>
      <pubDate>Sun, 13 Sep 2020 16:03:46 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/about/</guid>
      
        <description>&lt;h2 id=&#34;关于pseudoyu&#34;&gt;关于Pseudoyu&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/mtr_wait_people.jpeg&#34; alt=&#34;mtr_wait_people&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pseudoyu&lt;/strong&gt; 是我的第一个网站，主要用来记录生活、学习与零碎的一些想法。最早基于WordPress并放在自己的个人服务器上，后又迁移至同名微信公众号，最后出于稳定性和自由度考虑还是决定用Hugo生成自己的静态网页，托管于GitHub并绑定 &lt;a href=&#34;https://www.pseudoyu.com/zh/&#34;&gt;pseudoyu.com&lt;/a&gt; 域名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pseudoyu&lt;/strong&gt; 的命名很巧合，在HKU入学注册时因为自己名字过于常见而很难抉择使用什么uid，受人启发，想到了一个前缀「&lt;a href=&#34;https://www.oxfordlearnersdictionaries.com/definition/english/pseudo&#34;&gt;pseudo&lt;/a&gt;」，&lt;a href=&#34;https://www.oxfordlearnersdictionaries.com/definition/english/pseudonym&#34;&gt;pseudonym&lt;/a&gt; 有「笔名、假名」的含义，编程里常用到的 &lt;a href=&#34;https://www.lexico.com/definition/pseudocode&#34;&gt;pseudocode&lt;/a&gt; 是「伪码」的含义，而很喜欢的日漫 &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%81%BD%E7%89%A9%E8%AA%9E&#34;&gt;&lt;em&gt;物语系列 - 伪物语&lt;/em&gt;&lt;/a&gt; 中也不乏对「真物」与「伪物」的探究，那为什么不能有一个 pseudo 的 yu（我）呢？&lt;/p&gt;
&lt;p&gt;我常辗转于自我怀疑之中，在与挚友聊天时谈及「初心」或是「意义」时总是选择逃避，即使取得一些世俗的小成就也很难从心底感受到喜悦或满足，总觉得一切都如同「伪物」一样毫无意义。而随着年岁与经历的增长，我在另一篇文章 &lt;a href=&#34;https://www.hexarthur.com/zh/2020/06/06/23%E5%B2%81%E7%9A%84%E8%87%AA%E7%99%BD%E5%8E%BB%E8%BF%BD%E5%AF%BB%E6%84%8F%E4%B9%89/&#34;&gt;&lt;em&gt;23岁的自白：去追寻意义&lt;/em&gt;&lt;/a&gt; 中写道，「&lt;em&gt;也许思考本身就是建构意义的过程，让我不再期待某个瞬间能够顿悟，只是希望继续向前，体验和追寻着自己的人生.&lt;/em&gt;」&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pseudoyu&lt;/strong&gt; 这个名字也是寓意自己不应该再时常纠结意义，而是要不断去学习、体验与挑战新的事物，即使被评价「变了」、「不像自己」也能欣然接受。&lt;/p&gt;
&lt;p&gt;希望自己能多输入一些新的知识和想法，多写一些小文章。&lt;/p&gt;
&lt;h2 id=&#34;关于笔者&#34;&gt;关于笔者&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/mtr_window_me.jpeg&#34; alt=&#34;mtr_window_me&#34;&gt;&lt;/p&gt;
&lt;p&gt;我为人谦和，有着一颗文艺且细腻的心，希望不断学习，不断成长。现阶段的目标是能够在忙碌的闲隙里不断思考，多阅读写作。&lt;/p&gt;
&lt;h3 id=&#34;个人希望&#34;&gt;个人希望&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;生活方面&lt;/strong&gt;&lt;/em&gt;，希望能够和现在的挚友一直相互支持走下去，和家人保持现在这样亦亲亦友的关系，和在意的人一起面对人生的挑战，同时也能认识更多有趣的人。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;专业方面&lt;/strong&gt;&lt;/em&gt;，希望一直有所进步，能够在开源世界留下一些痕迹。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;经济方面&lt;/strong&gt;&lt;/em&gt;，希望能自主无虞，足够支撑做自己想做的事，探索更多元的未来生活。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;社会方面&lt;/strong&gt;&lt;/em&gt;，希望有机会做参与一些公益活动或其他形式的善举，为世界带来一些微小的改变。&lt;/p&gt;
&lt;h3 id=&#34;个人经历&#34;&gt;个人经历&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;硕士&lt;/strong&gt;，计算机学院 @ &lt;em&gt;&lt;strong&gt;香港大学 (HKU)&lt;/strong&gt;&lt;/em&gt; | 2020/2021&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本科&lt;/strong&gt;，外国语学院 @ &lt;em&gt;&lt;strong&gt;武汉理工大学 (WHUT)&lt;/strong&gt;&lt;/em&gt; | 2015/2019&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果说自己还有什么值得一提的话，可能就是从一个高中热爱文学、本科学了英语专业、与莎士比亚相伴的文艺青年一步步成为一个学计算机的科技宅的有趣经历吧。之后也会更多分享一路走来的心绪与实际的准备历程。&lt;/p&gt;
&lt;h3 id=&#34;个人足迹&#34;&gt;个人足迹&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/pseudoyu/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pseudoyu&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/user/ffe947f087d1f63b161c3fcb310a6578&#34;&gt;Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/user/show/121369734-yu-zhang&#34;&gt;Goodreads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leetcode.com/pseudoyu/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://acm.timus.ru/author.aspx?id=300324&#34;&gt;Timus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/pseudoyu&#34;&gt;HackerRank&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;社交媒体&#34;&gt;社交媒体&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/5374948/&#34;&gt;BiliBili&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/pseudoyuzhang&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.instagram.com/pseudo.yu/&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/pseudo_yu&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@pseudoyu&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCR0O0s303tGBi3P02hstQPA/&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/user/pseudo_yu&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Ethereum Features</title>
      <link>https://www.pseudoyu.com/zh/2020/10/29/blockchain-ethereum-features/</link>
      <pubDate>Thu, 29 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/29/blockchain-ethereum-features/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;ethereum-system-account-based-ledger&#34;&gt;Ethereum System (Account-based ledger)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_ethereum_features.svg&#34; alt=&#34;blockchain_ethereum_features&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;feature&#34;&gt;Feature&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Memory hard&lt;/li&gt;
&lt;li&gt;Mining puzzle&lt;/li&gt;
&lt;li&gt;ASIC resistance&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;account&#34;&gt;Account&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Threats
&lt;ul&gt;
&lt;li&gt;Double spending attack&lt;/li&gt;
&lt;li&gt;Replay attack
&lt;ul&gt;
&lt;li&gt;Solution: add a nonce to count tx&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Type
&lt;ul&gt;
&lt;li&gt;Externally owned account
&lt;ul&gt;
&lt;li&gt;Balance&lt;/li&gt;
&lt;li&gt;Nonce (sequence number)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Smart contract account (can&amp;rsquo;t start a transaction)
&lt;ul&gt;
&lt;li&gt;Balance&lt;/li&gt;
&lt;li&gt;Nonce&lt;/li&gt;
&lt;li&gt;Code&lt;/li&gt;
&lt;li&gt;Storge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pow---pos&#34;&gt;PoW -&amp;gt; PoS&lt;/h3&gt;
&lt;h3 id=&#34;smart-contract-decentralized-contract&#34;&gt;Smart contract (decentralized contract)&lt;/h3&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Questions</title>
      <link>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-questions/</link>
      <pubDate>Wed, 28 Oct 2020 14:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-questions/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;additional-questions&#34;&gt;Additional questions&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_questions.svg&#34; alt=&#34;blockchain_bitcoin_questions&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q: In a transaction, the receiver is not connected to the bitcoin network.
&lt;ul&gt;
&lt;li&gt;A: No need online, just records&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Lost private key
&lt;ul&gt;
&lt;li&gt;A: No solution&lt;/li&gt;
&lt;li&gt;Exchanges: Mt. Gox&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Wrong address
&lt;ul&gt;
&lt;li&gt;A: No solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: OP_RETURN, return mistake, why it&amp;rsquo;s still executed?
&lt;ul&gt;
&lt;li&gt;A: OP_RETURN is in the output, so it will be verified in the next TX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How to judge who find the nonce first?
&lt;ul&gt;
&lt;li&gt;A: Coinbase tx in the block&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How to judge who will get the tx fee?
&lt;ul&gt;
&lt;li&gt;A: No need to know in advance, just calculate (output - input)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How Hash pointer work in other hosts (pointer only works locally)?
&lt;ul&gt;
&lt;li&gt;A: Only Hash, no pointer (stored in key-value database, e.g. levelDB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Divide private key to several pieces?
&lt;ul&gt;
&lt;li&gt;A: Security, loss&lt;/li&gt;
&lt;li&gt;Possible solution: MULTISIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How can Bitcoin gets its consensus?
&lt;ul&gt;
&lt;li&gt;A: Actually no consensus, like fork attack, in principle/in practice&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: How to attrack miners?
&lt;ul&gt;
&lt;li&gt;A: Increase profits and lower cost, rareness&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q: Will quantum computing influence Bitcoin?
&lt;ul&gt;
&lt;li&gt;A: Not in practical use&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Anonymity</title>
      <link>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-anonymity/</link>
      <pubDate>Wed, 28 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/28/blockchain-bitcoin-anonymity/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;anonymity&#34;&gt;Anonymity&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_anonymity.svg&#34; alt=&#34;blockchain_bitcoin_anonymity&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pseudonymity&lt;/li&gt;
&lt;li&gt;Threats
&lt;ul&gt;
&lt;li&gt;Address generation
&lt;ul&gt;
&lt;li&gt;Analyze tx&lt;/li&gt;
&lt;li&gt;Analyze wallets (if used)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Connection to real identity
&lt;ul&gt;
&lt;li&gt;KYC (Know Your Customer)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bad use
&lt;ul&gt;
&lt;li&gt;Silk road (eBay for illegal drugs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tips
&lt;ul&gt;
&lt;li&gt;TOR browser&lt;/li&gt;
&lt;li&gt;Coin mixing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zero-knowledge proof
&lt;ul&gt;
&lt;li&gt;Signature (public key - private key)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Possible solution
&lt;ul&gt;
&lt;li&gt;Sacrifice
&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Not absolutely secure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zerocoin
&lt;ul&gt;
&lt;li&gt;Base coin&lt;/li&gt;
&lt;li&gt;Zero coin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zerocash&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>ICOM6012 Topic 4 Transport Layer</title>
      <link>https://www.pseudoyu.com/zh/2020/10/28/icom6012-topic-4-transport-layer/</link>
      <pubDate>Wed, 28 Oct 2020 09:37:44 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/28/icom6012-topic-4-transport-layer/</guid>
      
        <description>&lt;h1 id=&#34;icom6012-internet-infrastructure-technologies&#34;&gt;ICOM6012 Internet Infrastructure Technologies&lt;/h1&gt;
&lt;h2 id=&#34;topic-4-transport-layer&#34;&gt;Topic 4 Transport Layer&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/transport_layer.svg&#34; alt=&#34;transport_layer.svg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;actions&#34;&gt;Actions&lt;/h2&gt;
&lt;h3 id=&#34;sender&#34;&gt;Sender&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Get application layer message&lt;/li&gt;
&lt;li&gt;Determine segment header fields values&lt;/li&gt;
&lt;li&gt;Create segment&lt;/li&gt;
&lt;li&gt;Pass segment to IP&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;receiver&#34;&gt;Receiver&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Receive segment from IP&lt;/li&gt;
&lt;li&gt;Check header values&lt;/li&gt;
&lt;li&gt;Extract application layer message&lt;/li&gt;
&lt;li&gt;Demultiplexes message up to application via socket&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;services&#34;&gt;Services&lt;/h2&gt;
&lt;h3 id=&#34;provide-logical-communication-between-processes&#34;&gt;Provide logical communication between processes&lt;/h3&gt;
&lt;h3 id=&#34;run-in-end-system&#34;&gt;Run in end system&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Send side
&lt;ul&gt;
&lt;li&gt;Break app messages into segment&lt;/li&gt;
&lt;li&gt;Pass to network layer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Receive side
&lt;ul&gt;
&lt;li&gt;Reassembles segments into messages&lt;/li&gt;
&lt;li&gt;Pass to application layer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;protocols&#34;&gt;Protocols&lt;/h2&gt;
&lt;h3 id=&#34;tcp&#34;&gt;TCP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Features
&lt;ul&gt;
&lt;li&gt;Point-to-point
&lt;ul&gt;
&lt;li&gt;One sender, one receiver&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reliable, in-order byte system
&lt;ul&gt;
&lt;li&gt;No message boundaries&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Full duplex data
&lt;ul&gt;
&lt;li&gt;Bi-directional data flow in same connection&lt;/li&gt;
&lt;li&gt;MSS: maximum segment size (excluding header)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cumulative ACKs&lt;/li&gt;
&lt;li&gt;Pipelining
&lt;ul&gt;
&lt;li&gt;TCP congestion and flow control set window size&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flow Control
&lt;ul&gt;
&lt;li&gt;Sender will not overwhelm receiver&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Congestion control&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Concepts
&lt;ul&gt;
&lt;li&gt;Segment structure&lt;/li&gt;
&lt;li&gt;Sequence numbers
&lt;ul&gt;
&lt;li&gt;Byte stream &amp;ldquo;number&amp;rdquo; of first byte in segment&amp;rsquo;s data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Acknowledgements (ACKs)
&lt;ul&gt;
&lt;li&gt;Seq # of next byte expected from other side&lt;/li&gt;
&lt;li&gt;Cumulative ACKs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Procedure
&lt;ul&gt;
&lt;li&gt;Connection-oriented
&lt;ul&gt;
&lt;li&gt;Handshaking initializes sender, receiver state before data exchange&lt;/li&gt;
&lt;li&gt;TCP socket identified by 4-tuple
&lt;ul&gt;
&lt;li&gt;Source IP&lt;/li&gt;
&lt;li&gt;Source Port #&lt;/li&gt;
&lt;li&gt;Dest IP&lt;/li&gt;
&lt;li&gt;Dest Port #&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server host may support many simultaneous TCP sockets&lt;/li&gt;
&lt;li&gt;Web servers have different sockets for each connecting client
(Non-persistent HTTP will have different socket for each request)&lt;/li&gt;
&lt;li&gt;Demux
&lt;ul&gt;
&lt;li&gt;Receiver uses all four values to direct segment to appropriate socket&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3-way handshake
&lt;ul&gt;
&lt;li&gt;Connection setup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Connection management
&lt;ul&gt;
&lt;li&gt;Handshake
&lt;ul&gt;
&lt;li&gt;Agree to establish connection&lt;/li&gt;
&lt;li&gt;Agree on connection parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Retransmission&lt;/li&gt;
&lt;li&gt;Closing a connection&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Events
&lt;ul&gt;
&lt;li&gt;Data received from application
&lt;ul&gt;
&lt;li&gt;Create segment with seq # (a byte-stream number of first data byte in segment)&lt;/li&gt;
&lt;li&gt;Start timer if not already running
&lt;ul&gt;
&lt;li&gt;Think of timer as for oldest unACKed segment&lt;/li&gt;
&lt;li&gt;Expiration interval: TimeOutInterval&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Timeout
&lt;ul&gt;
&lt;li&gt;Retransmit segment that caused timeout&lt;/li&gt;
&lt;li&gt;Restart timer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ACK received
&lt;ul&gt;
&lt;li&gt;Update what is known to ACKed&lt;/li&gt;
&lt;li&gt;Start timer if there are still unACKed segment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Shortcomings
&lt;ul&gt;
&lt;li&gt;SYN DoS Attack
&lt;ul&gt;
&lt;li&gt;Half-open TCP connections consume all the TCP connection resources&lt;/li&gt;
&lt;li&gt;SYN packet with a spoofed source address&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;udp&#34;&gt;UDP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Features&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No frills&lt;/li&gt;
&lt;li&gt;Bare bones&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Best effort&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;Lost&lt;/li&gt;
&lt;li&gt;Delivered out-of-order to app&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;No handshaking&lt;/li&gt;
&lt;li&gt;Handle independently&lt;/li&gt;
&lt;li&gt;Services not available
&lt;ul&gt;
&lt;li&gt;Delay guarantee&lt;/li&gt;
&lt;li&gt;Bandwidth guarantee&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Concepts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Segment format
&lt;ul&gt;
&lt;li&gt;Source port #&lt;/li&gt;
&lt;li&gt;Dest port #&lt;/li&gt;
&lt;li&gt;Length&lt;/li&gt;
&lt;li&gt;Checksum
&lt;ul&gt;
&lt;li&gt;Detect errors
&lt;ul&gt;
&lt;li&gt;Sender
&lt;ul&gt;
&lt;li&gt;Treat segement contents&lt;/li&gt;
&lt;li&gt;Checksum: 1&amp;rsquo;s complement sum&lt;/li&gt;
&lt;li&gt;Put checksum into UDP field value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Receiver
&lt;ul&gt;
&lt;li&gt;Compute checksum of received segment&lt;/li&gt;
&lt;li&gt;Check equality
&lt;ul&gt;
&lt;li&gt;No: error detected&lt;/li&gt;
&lt;li&gt;Yes: no error detected (not sure)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Checksum calculation may be disabled in order to speed up the processing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Procedure&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connectionless demux
&lt;ul&gt;
&lt;li&gt;Create socket with unique local port #&lt;/li&gt;
&lt;li&gt;Sender side: create datagram to send into UDP socket
&lt;ul&gt;
&lt;li&gt;Dest IP&lt;/li&gt;
&lt;li&gt;Dest port #&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Receive side: receive UDP segment
(IP datagrams with same dest port #, but different source will be directed to same socket)
&lt;ul&gt;
&lt;li&gt;Check dest port #&lt;/li&gt;
&lt;li&gt;Direct UDP segment to socket with that port #&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Utilization&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Streaming multimedia apps
&lt;ul&gt;
&lt;li&gt;Loss tolerant&lt;/li&gt;
&lt;li&gt;Rate sensitive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS&lt;/li&gt;
&lt;li&gt;SNMP&lt;/li&gt;
&lt;li&gt;HTTP/3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shortcomings&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Need reliability at application layer&lt;/li&gt;
&lt;li&gt;Congestion control&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sctp&#34;&gt;SCTP&lt;/h3&gt;
&lt;h3 id=&#34;dccp&#34;&gt;DCCP&lt;/h3&gt;
&lt;h2 id=&#34;multiplexing-and-demultiplexing&#34;&gt;Multiplexing and Demultiplexing&lt;/h2&gt;
&lt;h3 id=&#34;multiplexing-at-sender&#34;&gt;Multiplexing at sender&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Handle data from multiple sockets, add transport header&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;demultiplexing-at-receiver&#34;&gt;Demultiplexing at receiver&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Handle data info to deliver received segments to correct socket&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;host-receivers-ip-datagram-host-uses-ip--port--to-redirect-segment&#34;&gt;Host receivers IP datagram (Host uses IP &amp;amp; port # to redirect segment)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Source IP&lt;/li&gt;
&lt;li&gt;Dest IP&lt;/li&gt;
&lt;li&gt;One transport layer segment
&lt;ul&gt;
&lt;li&gt;Source port #&lt;/li&gt;
&lt;li&gt;Dest port #&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;congestion-control&#34;&gt;Congestion Control&lt;/h2&gt;
&lt;h3 id=&#34;cause&#34;&gt;Cause&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Too many sources sending too much data too fast for network to handle&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;manifestations&#34;&gt;Manifestations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Long delay
&lt;ul&gt;
&lt;li&gt;Queueing in router buffers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Packet loss
&lt;ul&gt;
&lt;li&gt;Buffer overflow at network&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;approaches&#34;&gt;Approaches&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;End-end congestion control
&lt;ul&gt;
&lt;li&gt;Features
&lt;ul&gt;
&lt;li&gt;No explicit feedback from network&lt;/li&gt;
&lt;li&gt;Congestion inferred from observed loss, delay&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Network-assisted congestion control
&lt;ul&gt;
&lt;li&gt;Features
&lt;ul&gt;
&lt;li&gt;Routers provide direct feedback to hosts with flow passing through congested router&lt;/li&gt;
&lt;li&gt;May indicate congestion level or explicit set sending rate&lt;/li&gt;
&lt;li&gt;TCP ECN ATM DECbit protocols&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcp-congestion-control&#34;&gt;TCP Congestion Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;AIMD
&lt;ul&gt;
&lt;li&gt;Sender can increase sending rate until packet loss occurs, then decrease&lt;/li&gt;
&lt;li&gt;Additive increase
&lt;ul&gt;
&lt;li&gt;1 MSS (maximum segment size) until loss detected&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multiplicative decrease
&lt;ul&gt;
&lt;li&gt;Cut sending rate in half at each loss event&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Detecting, reacting to loss
&lt;ul&gt;
&lt;li&gt;ACKs problem
&lt;ul&gt;
&lt;li&gt;cwnd is cut in half&lt;/li&gt;
&lt;li&gt;Window grow linearly&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Timeout event
&lt;ul&gt;
&lt;li&gt;cwnd is set to 1 MSS&lt;/li&gt;
&lt;li&gt;Window grow exponentially to threshold, then linearly&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TCP slow start
&lt;ul&gt;
&lt;li&gt;Initially cwnd = 1 MSS&lt;/li&gt;
&lt;li&gt;Double cwnd every RTT&lt;/li&gt;
&lt;li&gt;Done by incrementing cwnd for every ACK received&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Scripts</title>
      <link>https://www.pseudoyu.com/zh/2020/10/24/blockchain-bitcoin-scripts/</link>
      <pubDate>Sat, 24 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/24/blockchain-bitcoin-scripts/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;scripts-stack-based-language&#34;&gt;Scripts (stack based language)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_scripts.svg&#34; alt=&#34;blockchain_bitcoin_scripts&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TX structure
&lt;ul&gt;
&lt;li&gt;txid&lt;/li&gt;
&lt;li&gt;hash&lt;/li&gt;
&lt;li&gt;version (of bitcoin)&lt;/li&gt;
&lt;li&gt;size&lt;/li&gt;
&lt;li&gt;locktime (take effect time)&lt;/li&gt;
&lt;li&gt;vin
&lt;ul&gt;
&lt;li&gt;txid&lt;/li&gt;
&lt;li&gt;vout&lt;/li&gt;
&lt;li&gt;scriptSig (input script)
&lt;ul&gt;
&lt;li&gt;asm&lt;/li&gt;
&lt;li&gt;hex&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;vout
&lt;ul&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;li&gt;n&lt;/li&gt;
&lt;li&gt;scriptPubKey (output script)&lt;/li&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;blockhash&lt;/li&gt;
&lt;li&gt;confirmations&lt;/li&gt;
&lt;li&gt;time (tx time)&lt;/li&gt;
&lt;li&gt;blocktime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Transaction
&lt;ul&gt;
&lt;li&gt;P2PK (Pay to Public Key)
&lt;ul&gt;
&lt;li&gt;input script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (Sig) (signed by provate key)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (PubKey)&lt;/li&gt;
&lt;li&gt;CHECKSIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;P2PKH (Pay to Public Key Hash)
&lt;ul&gt;
&lt;li&gt;input script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (Sig) (signed by provate key)&lt;/li&gt;
&lt;li&gt;PUSHDATA (PubKey)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output script
&lt;ul&gt;
&lt;li&gt;DUP (duplicate a PubKey)&lt;/li&gt;
&lt;li&gt;HASH160 (calculate the PubKey&amp;rsquo;s hash)&lt;/li&gt;
&lt;li&gt;PUSHDATA (PubKeyHash)&lt;/li&gt;
&lt;li&gt;EQUALVERIFY&lt;/li&gt;
&lt;li&gt;CHECKSIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;P2SH (Pay to Script Hash)
&lt;ul&gt;
&lt;li&gt;redeemScript
&lt;ul&gt;
&lt;li&gt;PUSHDATA (PubKey)&lt;/li&gt;
&lt;li&gt;CHECKSIG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;input script
&lt;ul&gt;
&lt;li&gt;PUSHDATA (Sig)&lt;/li&gt;
&lt;li&gt;PUSHDATA (serialized redeemScript)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output script
&lt;ul&gt;
&lt;li&gt;HASH160&lt;/li&gt;
&lt;li&gt;PUSHDATA (redeemScriptHash)&lt;/li&gt;
&lt;li&gt;EQUAL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Proof of Burn
&lt;ul&gt;
&lt;li&gt;Destroy bitcoin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Fork</title>
      <link>https://www.pseudoyu.com/zh/2020/10/23/blockchain-bitcoin-fork/</link>
      <pubDate>Fri, 23 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/23/blockchain-bitcoin-fork/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;fork&#34;&gt;Fork&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_fork.svg&#34; alt=&#34;blockchain_bitcoin_fork&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;State fork
&lt;ul&gt;
&lt;li&gt;Forking attack (deliberate fork)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Protocol fork
&lt;ul&gt;
&lt;li&gt;Hard fork (permanent)
&lt;ul&gt;
&lt;li&gt;Block size limit (1M -&amp;gt; 4M)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Soft fork (&amp;gt; 50%, temporary)
&lt;ul&gt;
&lt;li&gt;Block size limit (1M -&amp;gt; 0.5M)&lt;/li&gt;
&lt;li&gt;coinbase
&lt;ul&gt;
&lt;li&gt;As extra nonce 2^32 -&amp;gt; 2^96 (adding 8 bytes)&lt;/li&gt;
&lt;li&gt;As root hash of UTXO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;P2SH(Pay to Script Hash)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Throwable</title>
      <link>https://www.pseudoyu.com/zh/2020/10/22/java-throwable/</link>
      <pubDate>Thu, 22 Oct 2020 10:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/22/java-throwable/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;throwable&#34;&gt;Throwable&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_throwable.svg&#34; alt=&#34;java_throwable&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;error&#34;&gt;Error&lt;/h3&gt;
&lt;p&gt;(JVM can&amp;rsquo;t handle with)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VirtualMachineError
&lt;ul&gt;
&lt;li&gt;StackOverFlowError&lt;/li&gt;
&lt;li&gt;OutOfMemoryError&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AWTError&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;exception&#34;&gt;Exception&lt;/h3&gt;
&lt;p&gt;(Can be deal with by program)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IOException
&lt;ul&gt;
&lt;li&gt;EOFException&lt;/li&gt;
&lt;li&gt;FileNotFoundException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RuntimeException
&lt;ul&gt;
&lt;li&gt;ArrithmeticException&lt;/li&gt;
&lt;li&gt;MissingResourceException&lt;/li&gt;
&lt;li&gt;ClassNotFoundException&lt;/li&gt;
&lt;li&gt;NullPointerException&lt;/li&gt;
&lt;li&gt;IllegalArgumentException&lt;/li&gt;
&lt;li&gt;ArrayIndexOutOfBoundsException&lt;/li&gt;
&lt;li&gt;UnknownTypeException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;basic-syntax&#34;&gt;Basic syntax&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;try-catch&lt;/li&gt;
&lt;li&gt;throw&lt;/li&gt;
&lt;li&gt;throws&lt;/li&gt;
&lt;li&gt;finally&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Inheritance</title>
      <link>https://www.pseudoyu.com/zh/2020/10/22/java-inheritance/</link>
      <pubDate>Thu, 22 Oct 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/22/java-inheritance/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;inheritance&#34;&gt;Inheritance&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_inheritance.svg&#34; alt=&#34;java_inheritance&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;access&#34;&gt;Access&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Modifiers
&lt;ul&gt;
&lt;li&gt;protected
&lt;ul&gt;
&lt;li&gt;Visible to child class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;private&lt;/li&gt;
&lt;li&gt;public&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Encapsulation
&lt;ul&gt;
&lt;li&gt;Using API to communicate&lt;/li&gt;
&lt;li&gt;Class or members can be least accessed by external&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Child class rewrites the parent class
&lt;ul&gt;
&lt;li&gt;Methods in child class must have higher access level&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Field can&amp;rsquo;t be public
&lt;ul&gt;
&lt;li&gt;getter&lt;/li&gt;
&lt;li&gt;setter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;abstract-class-and-interface&#34;&gt;Abstract class and Interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Abstract class
&lt;ul&gt;
&lt;li&gt;abstract keyword
&lt;ul&gt;
&lt;li&gt;abstract method -&amp;gt; abstract class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t be instanced&lt;/li&gt;
&lt;li&gt;Can be inherited&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interface
&lt;ul&gt;
&lt;li&gt;public field
&lt;ul&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;final&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Members(field and method)
&lt;ul&gt;
&lt;li&gt;public&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Difference
&lt;ul&gt;
&lt;li&gt;Abstract class provide a IS-A relationship
while Interface provides a LIKE-A relationship&lt;/li&gt;
&lt;li&gt;One class can applied several interfaces
but can&amp;rsquo;t inherit more than one abstract class&lt;/li&gt;
&lt;li&gt;Fields of interface must be static/final
but abstract class has no restriction&lt;/li&gt;
&lt;li&gt;Members of interface must be public
but abstract class have multiple accesses&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Choose
&lt;ul&gt;
&lt;li&gt;Interface
(higher priority)
&lt;ul&gt;
&lt;li&gt;Irrelevant classes need to realize the same method&lt;/li&gt;
&lt;li&gt;need to use multiple inheritance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Abstract class
&lt;ul&gt;
&lt;li&gt;Relevant classes need to share same code block&lt;/li&gt;
&lt;li&gt;Need to control members&amp;rsquo; access&lt;/li&gt;
&lt;li&gt;Need to inherit non-static or no-constant field&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;super&#34;&gt;Super&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Access parent classes&amp;rsquo; constructor&lt;/li&gt;
&lt;li&gt;Access members of parent classes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;method-priority&#34;&gt;Method priority&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;this.func(this)&lt;/li&gt;
&lt;li&gt;super.func(this)&lt;/li&gt;
&lt;li&gt;this.func(super)&lt;/li&gt;
&lt;li&gt;super.func(super)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;override&#34;&gt;Override&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Child class realizes the same method as its parent class (statement)&lt;/li&gt;
&lt;li&gt;Restrictions
(using @override to check)
&lt;ul&gt;
&lt;li&gt;Child class method has higher access&lt;/li&gt;
&lt;li&gt;Child class returns the same type (or sub type)&lt;/li&gt;
&lt;li&gt;Child class throws the same Exception type or sub type&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;overload&#34;&gt;Overload&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Same method name&lt;/li&gt;
&lt;li&gt;Different parameter/amount/order
(at least one)&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Reflect</title>
      <link>https://www.pseudoyu.com/zh/2020/10/22/java-reflect/</link>
      <pubDate>Thu, 22 Oct 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/22/java-reflect/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;reflect&#34;&gt;Reflect&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_reflect.svg&#34; alt=&#34;java_reflect&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;core-concept&#34;&gt;Core concept&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Load classes, methods/fields when JVM is running,
no prior requirement of knowing the object when writing or compiling code&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;functions&#34;&gt;Functions&lt;/h3&gt;
&lt;p&gt;(runtime)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enables java code to discover information about the fields, methods and constructors of loaded classes&lt;/li&gt;
&lt;li&gt;Operate on their underlying counterparts within security restructions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Develop universal frameworks&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;javalangreflect&#34;&gt;java.lang.reflect&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Field&lt;/li&gt;
&lt;li&gt;Method&lt;/li&gt;
&lt;li&gt;Constructor&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;advantages&#34;&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Extensibility&lt;/li&gt;
&lt;li&gt;Help with development (IDE)&lt;/li&gt;
&lt;li&gt;Help with debugging and testing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;disadvantages&#34;&gt;Disadvantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Cost/Optimization&lt;/li&gt;
&lt;li&gt;Security restructions&lt;/li&gt;
&lt;li&gt;Exposing inner elements (private attributes or methods)&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Mining</title>
      <link>https://www.pseudoyu.com/zh/2020/10/22/blockchain-bitcoin-mining/</link>
      <pubDate>Thu, 22 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/22/blockchain-bitcoin-mining/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;h3 id=&#34;mining&#34;&gt;Mining&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_mining.svg&#34; alt=&#34;blockchain_bitcoin_mining&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solve puzzles
&lt;ul&gt;
&lt;li&gt;Average block time
&lt;ul&gt;
&lt;li&gt;10 minutes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Difficulty
&lt;ul&gt;
&lt;li&gt;Target = target * (actual time / expected time)&lt;/li&gt;
&lt;li&gt;Adjust every 2 weeks&lt;/li&gt;
&lt;li&gt;Ar most 4 times, at least 1/4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bernoulli process (nearly poisson process in BitCoin mining)
&lt;ul&gt;
&lt;li&gt;Bernoulli trial
&lt;ul&gt;
&lt;li&gt;A random experiment
with binary outcome&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A sequence of independent Bernoulli trial&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Feature
&lt;ul&gt;
&lt;li&gt;Memoryless&lt;/li&gt;
&lt;li&gt;Progress free
&lt;ul&gt;
&lt;li&gt;Ensure the fairness of mining&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exponential distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Device (Universal -&amp;gt; Specific)
&lt;ul&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;GPU&lt;/li&gt;
&lt;li&gt;ASIC (Application Specific Integrated Circuit))&lt;/li&gt;
&lt;li&gt;Mining pool (on demand mining)
&lt;ul&gt;
&lt;li&gt;Pool manager (risks of 51% attack)&lt;/li&gt;
&lt;li&gt;miners&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain BitCoin Features</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/blockchain-bitcoin-features/</link>
      <pubDate>Wed, 21 Oct 2020 22:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/blockchain-bitcoin-features/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;bitcoin-system-transaction-based-ledger&#34;&gt;BitCoin System (Transaction-based ledger)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_bitcoin_features.svg&#34; alt=&#34;blockchain_bitcoin_features&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;utxo-unspent-transaction-output&#34;&gt;UTXO (Unspent Transaction Output)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Total inputs = total outputs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;quantity&#34;&gt;Quantity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;21,000,000&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;block-reward&#34;&gt;Block reward&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Coinbase transaction&lt;/li&gt;
&lt;li&gt;Cut half every 4 year&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;transaction-fee&#34;&gt;Transaction fee&lt;/h3&gt;
&lt;h3 id=&#34;bitcoin-network&#34;&gt;BitCoin network&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Structure
&lt;ul&gt;
&lt;li&gt;Application layer
&lt;ul&gt;
&lt;li&gt;BitCoin blockchain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Network layer
&lt;ul&gt;
&lt;li&gt;P2P overlay network&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node
&lt;ul&gt;
&lt;li&gt;Seed node&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Feature
&lt;ul&gt;
&lt;li&gt;Simple&lt;/li&gt;
&lt;li&gt;Robust&lt;/li&gt;
&lt;li&gt;Not efficient&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Best effort&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Message transport
&lt;ul&gt;
&lt;li&gt;Flooding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;security&#34;&gt;Security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Problem
&lt;ul&gt;
&lt;li&gt;Sybil attack&lt;/li&gt;
&lt;li&gt;Forking attack&lt;/li&gt;
&lt;li&gt;Boycott&lt;/li&gt;
&lt;li&gt;Selfish mining
&lt;ul&gt;
&lt;li&gt;Reduce competition&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Solution
&lt;ul&gt;
&lt;li&gt;Based on computing power (large cost)&lt;/li&gt;
&lt;li&gt;Require 6 confirmation by nodes (long time, about 1 hour)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>ICOM6045 Topic 1 Cryptography</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/icom6045-topic-1-cryptography/</link>
      <pubDate>Wed, 21 Oct 2020 19:53:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/icom6045-topic-1-cryptography/</guid>
      
        <description>&lt;h1 id=&#34;icom6045-fundamentals-of-e-commerce-security&#34;&gt;ICOM6045 Fundamentals of E-Commerce Security&lt;/h1&gt;
&lt;h2 id=&#34;topic-1-cryptography&#34;&gt;Topic 1 Cryptography&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/cryptography.svg&#34; alt=&#34;cryptography&#34;&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Object Universal Functions</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/java-object-universal-functions/</link>
      <pubDate>Wed, 21 Oct 2020 12:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/java-object-universal-functions/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;object-universal-functions&#34;&gt;Object Universal Functions&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_object_functions.svg&#34; alt=&#34;java_object_functions&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;equals&#34;&gt;equals()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Equivalence relationship
&lt;ul&gt;
&lt;li&gt;x.euqal(x);
&lt;ul&gt;
&lt;li&gt;Compared to self&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;x.equals(y) == y.equals(x);
&lt;ul&gt;
&lt;li&gt;When conversed, also true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if (x.equals(y) &amp;amp;&amp;amp; y.equals(z))
x.equals(z);
&lt;ul&gt;
&lt;li&gt;When transited, also true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;x.equals(y) == x.equals(y);
&lt;ul&gt;
&lt;li&gt;When repeated, always true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;x.equals(null) == false;
&lt;ul&gt;
&lt;li&gt;When compared to null, always false (when x is not assigned null)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;About ==
&lt;ul&gt;
&lt;li&gt;For primitive data type, == measures the equivalence (there is no equals())&lt;/li&gt;
&lt;li&gt;For reference, == measures whether the variables reference to the same object or not&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mechanism
&lt;ul&gt;
&lt;li&gt;Check if it refers to the same object
&lt;ul&gt;
&lt;li&gt;Yes, return true&lt;/li&gt;
&lt;li&gt;No, continue&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Check their type
&lt;ul&gt;
&lt;li&gt;No, return false&lt;/li&gt;
&lt;li&gt;Yes, continue&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Convert the object&lt;/li&gt;
&lt;li&gt;Check the equivalence of every key fields&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hashcode&#34;&gt;hashCode()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;hashCode() returns a hash value,
and use equals() to check the equivalence
&lt;ul&gt;
&lt;li&gt;equal -&amp;gt; same hash&lt;/li&gt;
&lt;li&gt;same hash can&amp;rsquo;t -&amp;gt; equal (hash generated randomly)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cover hashCode() before equals()&lt;/li&gt;
&lt;li&gt;Add/realize hashCode() before using HashSet or HashMap class&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;clone&#34;&gt;clone()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Object protected function&lt;/li&gt;
&lt;li&gt;Shallow clone
&lt;ul&gt;
&lt;li&gt;Cloned object and the original object refer to the same object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deep clone
&lt;ul&gt;
&lt;li&gt;Cloned object and the original object refer to different object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Alternative method
&lt;ul&gt;
&lt;li&gt;Clone constructor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tostring&#34;&gt;toString()&lt;/h3&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Protocol</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/blockchain-protocol/</link>
      <pubDate>Wed, 21 Oct 2020 12:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/blockchain-protocol/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;protocol&#34;&gt;Protocol&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_protocol.svg&#34; alt=&#34;blockchain_protocol&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;distributed-consensus&#34;&gt;Distributed consensus&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Impossibility result&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;FLP
&lt;ul&gt;
&lt;li&gt;In an asynchronous system, if one faulty exists, there is no consensus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CAP Theorem
&lt;ul&gt;
&lt;li&gt;Consistency&lt;/li&gt;
&lt;li&gt;Availability&lt;/li&gt;
&lt;li&gt;Partition tolerance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example
&lt;ul&gt;
&lt;li&gt;Distributed hash table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;consensus-in-bitcoin&#34;&gt;Consensus in BitCoin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Membership (decide who can vote)
&lt;ul&gt;
&lt;li&gt;Hyperledger
&lt;ul&gt;
&lt;li&gt;Fabric&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vote by computing power (based on puzzle friendly)&lt;/li&gt;
&lt;li&gt;Increasing concern
&lt;ul&gt;
&lt;li&gt;Win
&lt;ul&gt;
&lt;li&gt;Longest valid chain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lose
&lt;ul&gt;
&lt;li&gt;Orphan block&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Keywords</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/java-keywords/</link>
      <pubDate>Wed, 21 Oct 2020 11:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/java-keywords/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;keywords&#34;&gt;Keywords&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_keywords.svg&#34; alt=&#34;java_keywords&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;final&#34;&gt;final&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Data
&lt;ul&gt;
&lt;li&gt;As for primitive data type, final make its value immutable&lt;/li&gt;
&lt;li&gt;As for reference, it can&amp;rsquo;t reference other objects but can modify itself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Method
&lt;ul&gt;
&lt;li&gt;Methods stated can&amp;rsquo;t be rewrite by its child class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Class
&lt;ul&gt;
&lt;li&gt;Can&amp;rsquo;t be inherited&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static&#34;&gt;static&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Variable
&lt;ul&gt;
&lt;li&gt;static variable
(also called class variable)
&lt;ul&gt;
&lt;li&gt;Belongs to the class
and can be shared/accessed by the class name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;instance variable
&lt;ul&gt;
&lt;li&gt;When creating an instance there will be an instance variable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static method
&lt;ul&gt;
&lt;li&gt;It exists when loading the class&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t rely on any instance&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t be abstract&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t contain this, super keywords
(they are related to specific object)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static (initialization) block
&lt;ul&gt;
&lt;li&gt;Operate once when doing the class initialization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static inner class
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t rely on external instance&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t access non-static variables or methods of external class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static import
&lt;ul&gt;
&lt;li&gt;No need to refer to the ClassName
&lt;ul&gt;
&lt;li&gt;Simplify&lt;/li&gt;
&lt;li&gt;Hard to read&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Initialization order
&lt;ul&gt;
&lt;li&gt;static variable, static block (Parent class)&lt;/li&gt;
&lt;li&gt;static variable, static block (Child class)&lt;/li&gt;
&lt;li&gt;instance variable, block (Parent class)&lt;/li&gt;
&lt;li&gt;Constructor (Parent class)&lt;/li&gt;
&lt;li&gt;instance variable, block (Child class)&lt;/li&gt;
&lt;li&gt;Constructor (Child class)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java Operation</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/java-operation/</link>
      <pubDate>Wed, 21 Oct 2020 10:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/java-operation/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;operation&#34;&gt;Operation&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_operation.svg&#34; alt=&#34;java_operation&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;compare&#34;&gt;Compare&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pass by value
(Java use pass-by-value to pass parameters)
&lt;ul&gt;
&lt;li&gt;Change object&amp;rsquo;s value in a function
will affect the original object&amp;rsquo;s value (same object)&lt;/li&gt;
&lt;li&gt;When referencing to a new object,
change won&amp;rsquo;t affect the original object&amp;rsquo;s value (different object)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pass by reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;casting&#34;&gt;Casting&lt;/h3&gt;
&lt;p&gt;(compiler force to convert types using (type of))&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+=&lt;/li&gt;
&lt;li&gt;-=&lt;/li&gt;
&lt;li&gt;*=&lt;/li&gt;
&lt;li&gt;/=&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;switch&#34;&gt;switch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use string object in switch conditional statements&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Data Structure</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/blockchain-data-structure/</link>
      <pubDate>Wed, 21 Oct 2020 10:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/blockchain-data-structure/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;data-structure&#34;&gt;Data Structure&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_data_structure.svg&#34; alt=&#34;blockchain_data_structure&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hash-pointer-blockchain-is-a-linked-list&#34;&gt;Hash pointer (blockchain is a linked list&lt;/h3&gt;
&lt;p&gt;using hash pointers)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Genesis block &amp;lt;- block1 &amp;lt;- block2 &amp;lt;-&amp;hellip;&amp;lt;- recent block (every block has a hash pointer)&lt;/li&gt;
&lt;li&gt;Tamper-event log&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;merkle-tree-using-hash-pointer-instead-of-pointer&#34;&gt;Merkle tree (using hash pointer instead of pointer)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Merkle proof (proof of membership/inclusion)
&lt;ul&gt;
&lt;li&gt;O(log(n))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Think: proof of non-membership
&lt;ul&gt;
&lt;li&gt;O(n)&lt;/li&gt;
&lt;li&gt;Sorted merkle tree: O(log(n))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;application-blockchain&#34;&gt;Application (blockchain)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Node
&lt;ul&gt;
&lt;li&gt;Full node (fully validating node)
&lt;ul&gt;
&lt;li&gt;Block header
&lt;ul&gt;
&lt;li&gt;Version&lt;/li&gt;
&lt;li&gt;Hash of previous block header&lt;/li&gt;
&lt;li&gt;Merkle root hash (protect all nodes)&lt;/li&gt;
&lt;li&gt;Target&lt;/li&gt;
&lt;li&gt;Nonce&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Block body
&lt;ul&gt;
&lt;li&gt;Transaction lists&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Light node (light weight node)
&lt;ul&gt;
&lt;li&gt;Only store block headers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem
&lt;ul&gt;
&lt;li&gt;Double spending&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Java String</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/java-string/</link>
      <pubDate>Wed, 21 Oct 2020 09:50:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/java-string/</guid>
      
        <description>&lt;h1 id=&#34;java-basics&#34;&gt;Java Basics&lt;/h1&gt;
&lt;h2 id=&#34;string&#34;&gt;String&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/java_string.svg&#34; alt=&#34;java_string&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;feature&#34;&gt;Feature&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Immutable
(byte, stated as final type)
&lt;ul&gt;
&lt;li&gt;Cache hash value
&lt;ul&gt;
&lt;li&gt;As the key of HashMap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Requirement of String Pool
&lt;ul&gt;
&lt;li&gt;Get reference from String Pool if it exists&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Security
&lt;ul&gt;
&lt;li&gt;As parameter for many java classes
&lt;ul&gt;
&lt;li&gt;Network connection&lt;/li&gt;
&lt;li&gt;Opening files&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Thread-safety
&lt;ul&gt;
&lt;li&gt;Shared among multiple threads freely&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;compare&#34;&gt;Compare&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;String
&lt;ul&gt;
&lt;li&gt;Immutable&lt;/li&gt;
&lt;li&gt;Thread-safe&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;StringBuffer
&lt;ul&gt;
&lt;li&gt;Mutable&lt;/li&gt;
&lt;li&gt;Thread-safe
&lt;ul&gt;
&lt;li&gt;Requirements of doing synchronization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;StringBuilder
&lt;ul&gt;
&lt;li&gt;Mutable&lt;/li&gt;
&lt;li&gt;Not thread-safe&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;string-pool-stores-all-literal-strings&#34;&gt;String Pool (stores all literal strings)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Useful to reduce memory requirements&lt;/li&gt;
&lt;li&gt;intern() method
&lt;ul&gt;
&lt;li&gt;If there is a string equals to the called one exists, return it
(using equals() method)&lt;/li&gt;
&lt;li&gt;If not, create a new string and return&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create 2 &amp;ldquo;same&amp;rdquo; string
&lt;ul&gt;
&lt;li&gt;new String()
&lt;ul&gt;
&lt;li&gt;Create different strings&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;s.intern()
&lt;ul&gt;
&lt;li&gt;Get reference of one string&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;String s = &amp;quot;&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;Automatically put into String Pool&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Blockchain Cryptography</title>
      <link>https://www.pseudoyu.com/zh/2020/10/21/blockchain-cryptography/</link>
      <pubDate>Wed, 21 Oct 2020 09:07:17 +0800</pubDate>
      
      <guid>https://www.pseudoyu.com/zh/2020/10/21/blockchain-cryptography/</guid>
      
        <description>&lt;h1 id=&#34;blockchain-technology-and-applications&#34;&gt;Blockchain Technology and Applications&lt;/h1&gt;
&lt;h2 id=&#34;cryptography&#34;&gt;Cryptography&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pseudoyu/image_hosting/master/hugo_images/blockchain_cryptography.svg&#34; alt=&#34;blockchain_cryptography&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;cryptographic-hash-function&#34;&gt;Cryptographic hash function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Application
&lt;ul&gt;
&lt;li&gt;Digital commitment (digital equivalent of a sealed envelop)
&lt;ul&gt;
&lt;li&gt;H(x || nonce)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SHA-256 (used in bitcoin)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Features
&lt;ul&gt;
&lt;li&gt;Collision resistance
&lt;ul&gt;
&lt;li&gt;x != y, H(x) = H(y)&lt;/li&gt;
&lt;li&gt;MD5 (proved bad)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Hiding
&lt;ul&gt;
&lt;li&gt;x -&amp;gt; H(x), H(x) !-&amp;gt; x&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Puzzle friendly
&lt;ul&gt;
&lt;li&gt;H(block header) &amp;lt;= target&lt;/li&gt;
&lt;li&gt;Keep trying nonce, no shortcuts&lt;/li&gt;
&lt;li&gt;Difficult to solve, but easy to verify&lt;/li&gt;
&lt;li&gt;Application
&lt;ul&gt;
&lt;li&gt;PoW (Proof of Work)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;encryption&#34;&gt;Encryption&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Symmetric encryption
&lt;ul&gt;
&lt;li&gt;Use the same one key&lt;/li&gt;
&lt;li&gt;Not secure to transport encryption key&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Asymmetric encryption (public key encryption)
&lt;ul&gt;
&lt;li&gt;Use two keys (one for encryption, another for decryption)&lt;/li&gt;
&lt;li&gt;A good source of randomness (assume)&lt;/li&gt;
&lt;li&gt;Application
&lt;ul&gt;
&lt;li&gt;Signature (used in bitcoin)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
  </channel>
</rss>
